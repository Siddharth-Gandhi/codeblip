['public static void or(int[] arr, int start, int end, int value) {for (int i = start; i < end; i++)arr[i] |= value']
['public static List<Integer> intersection(List<Integer> a, List<Integer> b) {List<Integer> result = new ArrayList<Integer>();if (a==null || b']
['public int add(int a, int b) {if (a == b) return a;if (a > b) {int t = a;a = b;b = t']
['public boolean compare(char[] a, char[] b) {if (a == null && b == null)return true;if (a == null || b == null)return false;']
['public List<Chunk> mergeChunks(List<Chunk> chunks) {List<Chunk> result = new ArrayList<>();for (Chunk chunk : chunks) {']
['public boolean equals(String str) {if (str == null)return false;int len = str.length();if (len != pattern.length())return false;for (int i']
['public boolean removeAll(Collection<?> c) {for (Iterator<?> i = c.iterator(); i.hasNext(); ) {if (!remove(i.next())) {return']
['public static List<Integer> intersect(List<Integer> a, List<Integer> b) {if (a == null || b == null) {return a;}List<Integer>']
['public int indexOf(int[] array, int value) {int index = -1;for (int a : array) {if (a == value) {return index;}}return']
