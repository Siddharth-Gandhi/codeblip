First element of train dataset: {'source_code': 'public virtual ListSpeechSynthesisTasksResponse ListSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListSpeechSynthesisTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListSpeechSynthesisTasksResponseUnmarshaller.Instance;return Invoke<ListSpeechSynthesisTasksResponse>(request, options);}', 'target_code': 'public ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request) {request = beforeClientExecution(request);return executeListSpeechSynthesisTasks(request);}'}
Train dataset size: 10300
Valid dataset size: 500
Number of trainable parameters: 102784000
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\pse\\\\\\\\pse\\\\\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\pse\\\\�pse\\\\pse\\\\pse\\\\pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�pse\\\\�����������������������������������������������������������������������������������������\\\\����������������������\\\\������������\\\\�����������\\\\������\\\\������\\\\��\\\\�\\\\�\\\\�\\\\\\\\�

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['package, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the, the']

Starting training for 10 epochs from cs to java with prompt: 
Epoch 1: Train Loss: {'loss': 1.2069907657498296}
Epoch 1: Validation Loss: {'loss': 0.7999317240715027}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\n    public String getPath() {return path;}\n    public int getMode() {return mode;}\n    public long getLength() {return length;}\n    public long getLastModified() {return lastModified;}\n    public long getLastModifiedInstant() {return lastModifiedInstant;}\n    public boolean isDirectory() {return isDirectory;}\n    public boolean isFile() {return isFile;}\n    public boolean isSymbolicLink() {return isSymbolicLink;}\n    public boolean isExecutable() {return isExecutable;}\n    public boolean isMissing() {return isMissing;}\n    public boolean isSubmodule() {return isSubmodule;}\n    public boolean isUntracked() {return isUntracked;}\n    public boolean isIgnored() {return isIgnored;}\n    public boolean isConflict() {return isConflict;}\n    public boolean isAssumeValid() {return isAssumeValid;}\n    public boolean isUnmerged() {return isUnmerged;}\n    public boolean isUnreadable() {return isUnreadable;}\n    public boolean isUntrackedFully() {return isUntrackedFully;}\n    public boolean isIgnoredFully() {return isIgnoredFully;}\n    public boolean isConflictFully() {return isConflictFully;}\n    public boolean isAssumeValidFully() {return isAssumeValidFully;}\n    public boolean isUnmergedFully() {return isUnmergedFully;}\n    public boolean isUnreadableFully() {return isUnreadableFully;}\n    public boolean isUntrackedMode() {return isUntrackedMode;}\n    public boolean isIgnoredMode() {return isIgnoredMode;}\n    public boolean isConflictMode() {return isConflictMode;}\n    public boolean isAssumeValidMode() {return isAssumeValidMode;}\n    public boolean isUnmergedMode() {return isUnmergedMode;}\n    public boolean isUnreadableMode() {return isUnreadableMode;}\n    public boolean isUntrackedModeFully() {return isUntrackedModeFully;}\n    public boolean isIgnoredModeFully() {return isIgnoredModeFully;}\n    public boolean isConflictModeFully() {return isConflictModeFully;}\n    public boolean isAssumeValidModeFully() {return isAssumeValidModeFully;}\n    public boolean isUnmergedModeFully() {return isUnmergedModeFully;}\n    public boolean isUnreadableModeFully() {return isUnreadableModeFully;}\n    public boolean isHasObjectId() {return hasObjectId;}\n    public boolean isHasPath() {return hasPath;}\n    public boolean isHasMode() {return hasMode;}\n    public boolean isHasLength() {return hasLength;}\n    public boolean isHasLastModified() {return hasLastModified;}\n    public boolean isHasLastModifiedInstant() {return hasLastModifiedInstant;}\n    public boolean isHasDirectory() {return hasDirectory;}\n    public boolean isHasFile() {return has']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT']

New best validation loss: 0.7999317240715027
Epoch 2: Train Loss: {'loss': 0.8038094044831192}
Epoch 2: Validation Loss: {'loss': 0.7206191983222962}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\n\n    @Override\n    public String toString() {\n        return objectId.name();\n    }\n\n    @Override\n    public int hashCode() {\n        return objectId.hashCode();\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (o instanceof ObjectIdRef) {\n            return objectId.equals(((ObjectIdRef) o).objectId);\n        }\n        return false;\n    }\n\n    @Override\n    public int compareTo(ObjectIdRef o) {\n        return objectId.compareTo(o.objectId);\n    }\n\n    @Override\n    public int compareTo(Ref o) {\n        return objectId.compareTo(o.getObjectId());\n    }\n\n    @Override\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public ObjectId getObjectId() {\n        return objectId;\n    }\n\n    @Override\n    public boolean isPeeled() {\n        return true;\n    }\n\n    @Override\n    public Ref peel() {\n        return this;\n    }\n\n    @Override\n    public boolean isSymbolic() {\n        return false;\n    }\n\n    @Override\n    public Ref getLeaf() {\n        return this;\n    }\n\n    @Override\n    public Ref getTarget() {\n        return this;\n    }\n\n    @Override\n    public String getTargetIdentifier() {\n        return objectId.name();\n    }\n\n    @Override\n    public ObjectId getPeeledObjectId() {\n        return objectId;\n    }\n\n    @Override\n    public void setObjectId(ObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setObjectId(AnyObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setPeeledObjectId(ObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setPeeledObjectId(AnyObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setTarget(Ref target) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setTarget(Ref target, String name) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setTarget(ObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setTarget(ObjectId id, String name) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setSymbolicTarget(Ref target) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setSymbolicTarget(Ref target, String name) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setSymbolicTarget(ObjectId id) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void setSymbolicTarget(ObjectId']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT_REF + RamUsageEstimator.NUM_BYTES_OBJECT']

New best validation loss: 0.7206191983222962
Epoch 3: Train Loss: {'loss': 0.7151917013207686}
Epoch 3: Validation Loss: {'loss': 0.6724372982978821}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewObjectId() {return newObjectId;}\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is {@code null}.\n     */\n    public boolean isNewObject() {\n        return oldObjectId == null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getNewObjectId()} is {@code null}.\n     */\n    public boolean isDeleted() {\n        return newObjectId == null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is not {@code null}.\n     */\n    public boolean isModified() {\n        return oldObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isAdded() {\n        return newObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is {@code null} and\n     *         {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isAddedFile() {\n        return oldObjectId == null && newObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is not {@code null} and\n     *         {@link #getNewObjectId()} is {@code null}.\n     */\n    public boolean isDeletedFile() {\n        return oldObjectId != null && newObjectId == null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is not {@code null} and\n     *         {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isModifiedFile() {\n        return oldObjectId != null && newObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is {@code null} and\n     *         {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isAddedDirectory() {\n        return oldObjectId == null && newObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is not {@code null} and\n     *         {@link #getNewObjectId()} is {@code null}.\n     */\n    public boolean isDeletedDirectory() {\n        return oldObjectId != null && newObjectId == null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is not {@code null} and\n     *         {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isModifiedDirectory() {\n        return oldObjectId != null && newObjectId != null;\n    }\n\n    /**\n     * @return {@code true} if {@link #getOldObjectId()} is {@code null} and\n     *         {@link #getNewObjectId()} is not {@code null}.\n     */\n    public boolean isAddedSubmodule() {\n        return oldObject']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesU']

New best validation loss: 0.6724372982978821
Epoch 4: Train Loss: {'loss': 0.6492732801078592}
Epoch 4: Validation Loss: {'loss': 0.6244873564243316}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getExpectedOldObjectId() {return expectedOldObjectId;}\n    public void setExpectedOldObjectId(ObjectId expectedOldObjectId) {\n        this.expectedOldObjectId = expectedOldObjectId;\n    }\n\n    public ObjectId getExpectedNewObjectId() {\n        return expectedNewObjectId;\n    }\n\n    public void setExpectedNewObjectId(ObjectId expectedNewObjectId) {\n        this.expectedNewObjectId = expectedNewObjectId;\n    }\n\n    public ObjectId getNewObjectId() {\n        return newObjectId;\n    }\n\n    public void setNewObjectId(ObjectId newObjectId) {\n        this.newObjectId = newObjectId;\n    }\n\n    public ObjectId getOldObjectId() {\n        return oldObjectId;\n    }\n\n    public void setOldObjectId(ObjectId oldObjectId) {\n        this.oldObjectId = oldObjectId;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n\n        DiffEntry that = (DiffEntry) o;\n\n        if (status != that.status) {\n            return false;\n        }\n        if (oldObjectId != null ? !oldObjectId.equals(that.oldObjectId) : that.oldObjectId != null) {\n            return false;\n        }\n        if (newObjectId != null ? !newObjectId.equals(that.newObjectId) : that.newObjectId != null) {\n            return false;\n        }\n        if (expectedOldObjectId != null\n                ? !expectedOldObjectId.equals(that.expectedOldObjectId)\n                : that.expectedOldObjectId != null) {\n            return false;\n        }\n        if (expectedNewObjectId != null\n                ? !expectedNewObjectId.equals(that.expectedNewObjectId)\n                : that.expectedNewObjectId != null) {\n            return false;\n        }\n        if (path != null ? !path.equals(that.path) : that.path != null) {\n            return false;\n        }\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result = status.hashCode();\n        result = ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += RamUsageEstimator.sizeOf(terms);ramBytesUsed += RamUsageEstimator.sizeOf(termBytes);ramBytesUsed += RamUsageEstimator.sizeOf(docFreqs);ramBytesUsed += RamUsageEstimator.sizeOf(freqs);ramBytesUsed += RamUsageEstimator.sizeOf(positions);ramBytesUsed += RamUsageEstimator.sizeOf(offsets);ramBytesUsed += RamUsageEstimator.sizeOf(startOffsets);ramBytesUsed += RamUsageEstimator.sizeOf(endOffsets);ramBytesUsed += RamUsageEstimator.sizeOf(payloads);ramBytesUsed += RamUsageEstimator.sizeOf(totalTermFreqs);ramBytesUsed += RamUsageEstimator.sizeOf(docCounts);ramBytesUsed += RamUsageEstimator.sizeOf(longs);ramBytesUsed += RamUsageEstimator.sizeOf(ints);ramBytesUsed += RamUsageEstimator.sizeOf(floats);ramBytesUsed += RamUsageEstimator.sizeOf(doubles);ramBytesUsed += RamUsageEstimator.sizeOf(bytes);ramBytesUsed += RamUsageEstimator.sizeOf(ints2);ramBytesUsed += RamUsageEstimator.sizeOf(floats2);ramBytesUsed += RamUsageEstimator.sizeOf(doubles2);ramBytesUsed += RamUsageEstimator.sizeOf(bytes2);ramBytesUsed += RamUsageEstimator.sizeOf(ints3);ramBytesUsed += RamUsageEstimator.sizeOf(floats3);ramBytesUsed += RamUsageEstimator.sizeOf(doubles3);ramBytesUsed += RamUsageEstimator.sizeOf(bytes3);ramBytesUsed += RamUsageEstimator.sizeOf(ints4);ramBytesUsed += RamUsageEstimator.sizeOf(floats4);ramBytesUsed += RamUsageEstimator.sizeOf(doubles4);ramBytesUsed += RamUsageEstimator.sizeOf(bytes4);ramBytesUsed += RamUsageEstimator.sizeOf(ints5);ramBytesUsed += RamUsageEstimator.sizeOf(floats5);ramBytesUsed += RamUsageEstimator.sizeOf(doubles5);ramBytesUsed += RamUsageEstimator.sizeOf(bytes5);ramBytesUsed += RamUsageEstimator.sizeOf(ints6);ramBytesUsed += RamUsageEstimator.sizeOf(floats6);ramBytesUsed += RamUsageEstimator.sizeOf(doubles6);ramBytesUsed += RamUsageEstimator.sizeOf(bytes6);ramBytesUsed += RamUsageEstimator.sizeOf(ints7);ramBytesUsed += RamUsageEstimator.sizeOf(floats7);ramBytesUsed += RamUsageEstimator.sizeOf(doubles7);ramBytesUsed += RamUsageEstimator.sizeOf(bytes7);ramBytesUsed += RamUsageEstimator']

New best validation loss: 0.6244873564243316
Epoch 5: Train Loss: {'loss': 0.5952731040496271}
Epoch 5: Validation Loss: {'loss': 0.591993121266365}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getOldObjectId() {return oldObjectId;}\n    public ObjectId getNewObjectId() {return newObjectId;}\n\n    @Override\n    public boolean equals(Object other) {\n      if (other instanceof Change) {\n        final Change c = (Change) other;\n        return oldObjectId.equals(c.oldObjectId) && newObjectId.equals(c.newObjectId);\n      }\n      return false;\n    }\n\n    @Override\n    public int hashCode() {\n      return oldObjectId.hashCode() ^ newObjectId.hashCode();\n    }\n\n    @Override\n    public String toString() {\n      return oldObjectId.name() + ".." + newObjectId.name();\n    }\n ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEst']

New best validation loss: 0.591993121266365
Epoch 6: Train Loss: {'loss': 0.5438315573479365}
Epoch 6: Validation Loss: {'loss': 0.5753099740743637}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewObjectId() {return newObject;}\n    public boolean isNewObject() {\n        return newObject != null;\n    }\n\n    public boolean isMissingObject() {\n        return missingObject != null;\n    }\n\n    public ObjectId getMissingObject() {\n        return missingObject;\n    }\n\n    public boolean isModified() {\n        return modified != null;\n    }\n\n    public ObjectId getModified() {\n        return modified;\n    }\n\n    public boolean isDeleted() {\n        return deleted != null;\n    }\n\n    public ObjectId getDeleted() {\n        return deleted;\n    }\n\n    public boolean isAdded() {\n        return added != null;\n    }\n\n    public ObjectId getAdded() {\n        return added;\n    }\n\n    public boolean isCopied() {\n        return copied != null;\n    }\n\n    public ObjectId getCopied() {\n        return copied;\n    }\n\n    public boolean isRenamed() {\n        return renamed != null;\n    }\n\n    public RenamedPath getRenamed() {\n        return renamed;\n    }\n\n    public boolean isTypeChange() {\n        return typeChange != null;\n    }\n\n    public TypeChange getTypeChange() {\n        return typeChange;\n    }\n\n    public boolean isUnmerged() {\n        return unmerged != null;\n    }\n\n    public UnmergedPath getUnmerged() {\n        return unmerged;\n    }\n\n    public boolean isConflict() {\n        return conflict != null;\n    }\n\n    public Conflict getConflict() {\n        return conflict;\n    }\n\n    public boolean isUntracked() {\n        return untracked != null;\n    }\n\n    public UntrackedPath getUntracked() {\n        return untracked;\n    }\n\n    public boolean isAssumeValid() {\n        return assumeValid != null;\n    }\n\n    public ObjectId getAssumeValid() {\n        return assumeValid;\n    }\n\n    public boolean isIgnored() {\n        return ignored != null;\n    }\n\n    public IgnoredPath getIgnored() {\n        return ignored;\n    }\n\n    public boolean isUnreadable() {\n        return unreadable != null;\n    }\n\n    public UnreadablePath getUnreadable() {\n        return unreadable;\n    }\n\n    @Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder("DiffEntry{");\n        sb.append("oldMode=").append(oldMode);\n        sb.append(", newMode=").append(newMode);\n        sb.append(", oldObjectId=").append(oldObject);\n        sb.append(", newObjectId=").append(newObject);\n        sb.append(", deleted=").append(deleted);\n        sb.append(", added=").append(added);\n        sb.append(", copied=").append(copied);\n        sb.append(", renamed=").append(renamed);\n        sb.append(", typeChange=").append(typeChange);\n        sb.append(", unmer']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesU']

New best validation loss: 0.5753099740743637
Epoch 7: Train Loss: {'loss': 0.5027754444433647}
Epoch 7: Validation Loss: {'loss': 0.5537664353847503}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewObjectId() {return newObjectId;}\n    public void setNewObjectId(ObjectId newObjectId) {this.newObjectId = newObjectId;}\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        Rename rename = (Rename) o;\n        return Objects.equals(oldPath, rename.oldPath)\n                && Objects.equals(newPath, rename.newPath)\n                && Objects.equals(oldObjectId, rename.oldObjectId)\n                && Objects.equals(newObjectId, rename.newObjectId);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(oldPath, newPath, oldObjectId, newObjectId);\n    }\n\n    @Override\n    public String toString() {\n        return "Rename{"\n                + "oldPath=\'" + oldPath + \'\\\'\'\n                + ", newPath=\'" + newPath + \'\\\'\'\n                + ", oldObjectId=" + oldObjectId\n                + ", newObjectId=" + newObjectId\n                + \'}\';\n    }\n\n    public static class Builder {\n        private String oldPath;\n        private String newPath;\n        private ObjectId oldObjectId;\n        private ObjectId newObjectId;\n\n        public Builder() {}\n\n        public Builder setOldPath(String oldPath) {\n            this.oldPath = oldPath;\n            return this;\n        }\n\n        public Builder setNewPath(String newPath) {\n            this.newPath = newPath;\n            return this;\n        }\n\n        public Builder setOldObjectId(ObjectId oldObjectId) {\n            this.oldObjectId = oldObjectId;\n            return this;\n        }\n\n        public Builder setNewObjectId(ObjectId newObjectId) {\n            this.newObjectId = newObjectId;\n            return this;\n        }\n\n        public Rename build() {\n            return new Rename(oldPath, newPath, oldObjectId, newObjectId);\n        }\n    }\n} <?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateUsersTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create(\'users\', function (Blueprint $table) {\n            $table->id();\n            $table->string(\'name\');\n            $table->string(\'email\')->unique();\n            $table->timestamp(\'email_verified_at\')->nullable();\n            $table->string(\'password\');\n            $table->rememberToken();\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesU']

New best validation loss: 0.5537664353847503
Epoch 8: Train Loss: {'loss': 0.4565671937500389}
Epoch 8: Validation Loss: {'loss': 0.5306378985643387}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\npublic boolean isObjectId() {return objectId != null;}\n\npublic void setObjectId(ObjectId objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = objectId.copy();\n\t}\n}\n\npublic void setObjectId(AnyObjectId objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = objectId.copyToObjectId();\n\t}\n}\n\npublic void setObjectId(ObjectId objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = objectId.copy();\n\t}\n}\n\npublic void setObjectId(AnyObjectId objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = objectId.copyToObjectId();\n\t}\n}\n\npublic void setObjectId(byte[] objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId);\n\t}\n}\n\npublic void setObjectId(int[] objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId);\n\t}\n}\n\npublic void setObjectId(long[] objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId);\n\t}\n}\n\npublic void setObjectId(String objectId) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromString(objectId);\n\t}\n}\n\npublic void setObjectId(byte[] objectId, int offset) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId, offset);\n\t}\n}\n\npublic void setObjectId(int[] objectId, int offset) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId, offset);\n\t}\n}\n\npublic void setObjectId(long[] objectId, int offset) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.objectId = ObjectId.fromRaw(objectId, offset);\n\t}\n}\n\npublic void setObjectId(String objectId, int offset) {\n\tif (objectId == null) {\n\t\tthis.objectId = null;\n\t} else {\n\t\tthis.']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_REF);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_ARRAY_HEADER);ramBytesUsed += RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYT']

New best validation loss: 0.5306378985643387
Epoch 9: Train Loss: {'loss': 0.4166690215207998}
Epoch 9: Validation Loss: {'loss': 0.5205503734350204}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\n    public void setObjectId(ObjectId objectId) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = objectId.copy();\n        }\n    }\n\n    public void setObjectId(AnyObjectId objectId) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = objectId.copy();\n        }\n    }\n\n    public void setObjectId(byte[] objectId) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId);\n        }\n    }\n\n    public void setObjectId(int[] objectId) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId);\n        }\n    }\n\n    public void setObjectId(long[] objectId) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId);\n        }\n    }\n\n    public void setObjectId(byte[] objectId, int offset) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId, offset);\n        }\n    }\n\n    public void setObjectId(int[] objectId, int offset) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId, offset);\n        }\n    }\n\n    public void setObjectId(long[] objectId, int offset) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId, offset);\n        }\n    }\n\n    public void setObjectId(AnyObjectId objectId, int offset) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = objectId.copy(offset);\n        }\n    }\n\n    public void setObjectId(byte[] objectId, int offset, int length) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId, offset, length);\n        }\n    }\n\n    public void setObjectId(int[] objectId, int offset, int length) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new ObjectId(objectId, offset, length);\n        }\n    }\n\n    public void setObjectId(long[] objectId, int offset, int length) {\n        if (objectId == null) {\n            this.objectId = null;\n        } else {\n            this.objectId = new']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long bytesUsed = BASE_RAM_BYTES_USED;if (fields != null) {bytesUsed += fields.ramBytesUsed();}if (terms != null) {bytesUsed += terms.ramBytesUsed();}if (termsIndex != null) {bytesUsed += termsIndex.ramBytesUsed();}if (postings != null) {bytesUsed += postings.ramBytesUsed();}return bytesUsed;}else{return BASE_RAM_BYTES_USED;}\n}\n\n ']

New best validation loss: 0.5205503734350204
Epoch 10: Train Loss: {'loss': 0.38043883159322645}
Epoch 10: Validation Loss: {'loss': 0.5064691178798676}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(ObjectId objectId) {\n\t\tif (objectId == null) {\n\t\t\tthis.objectId = null;\n\t\t} else {\n\t\t\tthis.objectId = objectId.copy();\n\t\t}\n\t}\n\n\tpublic void setObjectId(AnyObjectId objectId) {\n\t\tif (objectId == null) {\n']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long bytesUsed = BASE_RAM_BYTES_USED;if (fields != null) {bytesUsed += fields.ramBytesUsed();} if (terms != null) {bytesUsed += terms.ramBytesUsed();} return bytesUsed;}\n}\n\n ']

New best validation loss: 0.5064691178798676
Training completed. Best validation loss: 0.5064691178798676
Training loss list: [1.2069907657498296, 0.8038094044831192, 0.7151917013207686, 0.6492732801078592, 0.5952731040496271, 0.5438315573479365, 0.5027754444433647, 0.4565671937500389, 0.4166690215207998, 0.38043883159322645]
Validation loss list: [0.7999317240715027, 0.7206191983222962, 0.6724372982978821, 0.6244873564243316, 0.591993121266365, 0.5753099740743637, 0.5537664353847503, 0.5306378985643387, 0.5205503734350204, 0.5064691178798676]
