public void serialize(LittleEndianOutput out) {out.writeShort(field_1_vcenter);}
public void addAll(BlockList<T> src) {if (src.size == 0)return;for (int srcIdx : src.tailDirIdx)addAll(src.
public void writeByte(byte b) {if (currentBlock == null) {addBlock(currentBlock);}currentBlock[upto++] = b;}
public ObjectId getObjectId() {return objectId;}
public DeleteDomainEntryResult deleteDomainEntry() {return deleteDomainEntryDelegate.execute(this);}
public long ramBytesUsed() {return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets
public final String getRawMessage() {final byte[] raw = buffer;if (msgB < 0) {return ""; }return RawParseUtils.decode(guessEncoding(), raw, raw
public POIFSFile() {this(true);_header.setBCount(1);_header.setBArray(new int[1]);BB b = BB.
public void init(int address) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];offset0 = address;return slice!= null;}=
public SubmoduleAddCommand setPath(String path) {this.path = path;return this;}
public List<ExpressRequest> list() {return new List<ExpressRequest>(this);}
public QueryParserTokenManager(CharStream stream, int lexState) {this(stream);SwitchTo(lexState);}
public GetSortedSetKeysResult getSortedSetKeys() {return getSortedSetKeys(this.sortedSetKeys);}
public ModifyStrategyRequest() {super("aegis", "2016-11-11", "ModifyStrategy", "vcpaegis");setMethod(MethodType.POST);}
public boolean ready() throws IOException {synchronized (lock) {if (in == null) {throw new IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || in
public EscherResult getResult() {return new EscherResult(this.getResult(), this.getResultPosition(), this.getResultPosition(), this.getResultPosition(), this.get
public int read(byte[] buffer, int offset, int length) {if (buffer == null) {throw new NullPointerException("buffer == null");}Arrays.checkOffsetAndCount(buffer
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(String str) {if (str == null) {System.out.println("null");} else {System.out.println("");}return;}
public NotImplementedFunctionException(String functionName, Exception cause) {super(functionName, cause);this.functionName = functionName;}
public final void run() {flush();}
public void readBytes(byte[] b, int offset, int len, boolean useBuffer) throws IOException {int available = bufferLength - bufferPosition;if (len <= available) {if (
public TagQueueResult tagQueue(TagQueueRequest request) {return tagQueue(request);}
public final void remove() {throw new IllegalStateException();}
public ModifyCacheSubnetGroupResult modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {return executeModifyCacheSubnetGroup(request);}
public void setParams(String params) {super.setParams(params);locale = locale = "";StringTokenizer st = new StringTokenizer(params, ",");if (st.hasMoreTokens
public DeleteDocumentationResult deleteDocumentation(String docId) {return deleteDocumentation(docId);}
public boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (length!= other.length)
public GetInstanceDetailResult getInstanceDetail() {return new GetInstanceDetailResult(this);}
public void createPolyline(HSSFElement element) {shape.setParent(element);shape.setAnchor(element);shapes.add(shape);onCreate(shape);return shape
public String getSheetName(int sheetIndex) {return getBoundSheetRecord(sheetIndex).getSheetname();}
public GetSearchResult() {return new GetSearchResult(this);}
public void associate() {this.data = new HashMap<>();for(String key : this.data.keySet()) {this.data.put(key, null);}}
public void translate(int i) {for (int j = 0; j < mrr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.set
public static String quote(String string) {StringBuilder sb = new StringBuilder();sb.append("\\Q");int pos = 0;while ( (k = string.indexOf("\\E",
public void translate(int value) {if (value == null) {throw new NullPointerException();}translate(value, 0, size());}
public ArrayPtg(Object[] values2d) {int nColumns = values2d.length;int nRows = values2d.length;_nColumns = nColumns;
public GetIpIPv6AddressResult getHostIPv6Address() {return getHostIPv6Address(this.getHostIPv6(), this.getPort(), this.getPort(), this.get
public String toString() {return getClass().getSimpleName() + " [" + getValueAsString() + "]";}
public String toString() {return "ToChildBlockJoinQuery("+parentQuery.toString()+")";}
public final void end() {return end();}
public UpdateConfigurationSetSendEnabledResult updateConfigurationSetSendEnabled(UpdateConfigurationSetSendEnabledRequest request) {return updateConfigurationSetSendEnabled(request);}
public int getNextXBATBlockOffset() {return getXBATBlockOffset() * LittleEndianConstants.INT_SIZE;}
public void multiplyByPowerOfPower(int pow10) {PowerPower pt = PowerPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mul
public String toString() {StringBuilder b = new StringBuilder();for (int i = 0; i < l; i++) {b.append(getCharAt(i));if (i <
public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRegionName(regionName);this.fetch
public void setProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}
public void reset() {if (!first()) {ptr = 0;if (!eof()) {peekEntry();}} else {ptr = 0;if (!eof()) {peekEntry();
public E previous() {if (iterator.peekIndex() >= start) {return iterator.peek();}throw new NoSuchElementException();}
public String getNewPrefix() {return this.newPrefix;}
public final int indexOfValue(int value) {for (int i = 0; i < mSize; i++) {if (mValues[i] == value) return i;return
public final char[] stem(char word[], int length) {List<char> stem = stem(word, length);if ( stem.size() < 2 ) return stem;List
public GetGatewayResponsesResult getGatewayResponses(Request request) {return getGatewayResponses(request);}
public void setPosition(long pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks.get(currentBlockIndex);}
public long skip(long n) {long s = Math.min(available(), n);return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {if (bootstrapActionConfig == null) {return null;}if (bootstrapActionConfig.getClass().equals("org.
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_
public int lastIndexOf(String string) {return lastIndexOf(string, 0);}
public boolean add(char[] text) {return add(text, 0, text.length());}
public void setSection(String section, String section) {ConfigSnapshot src, res;if (src == null) {res = new ConfigSnapshot();src = state.get();res =
public String getName() {return this.name;}
public void addSubRecord(int index, SubRecord element) {subrecords.add( index, element);}
public final void remove() {        }
public static DoublePhraseFilter create(TokenStream input) {return new DoublePhraseFilter(input, maxCodeLength, integrate);}
public int length() {return this.length;}
public final void setValue(boolean newValue) {value = newValue;}
public Pair(ContentSource oldSource, ContentSource newSource) {this.oldSource = oldSource;this.newSource = newSource;}= newSource;Utils.copy
public int get(int i) {if (count <= i)throw new IndexOutOfBoundsException(i);return entries[i];}
public CreateRepoRequest() {super("cr", "2016-06-07", "CreateRepo", "cr");setUriPattern("/repos");setMethod(MethodType.PUT);}
public final boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public void remove() {if (expectedModCount == list.modCount) {if (lastLink!= null) {Link<ET> next = lastLink.next;Link<ET
public MergeResult merge(MergeRequest request) {this.request = request;return new MergeResult(this);}
public ConnectivityResult connect(ConnectivityRequest req) {this.req = req;return new ConnectivityResult(req);}
public int getStartIndex() {return this.startIndex;}
public final WeightedTerm[] getTerms(Query query) {return getTerms(query, false);}
public final ByteBuffer compact() {throw new ReadOnlyBufferException();}
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {
public String getSoftwareName() {String s = getPath();if ("/".equals(s) || "/".equals(s)) s = getHost();if (s == null) throw
public DescribeNotebookInstanceLifecycleConfigResult describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeDescribeNotebookInstanceLifecycleConfig(request);}
public String accessGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrantGrant
public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {this.request = request;return createVpnConnection(request);}
public DescribeInstancesResult describeInstances() {return describeInstances(ArrayUtil.copyOfSubArray(this.instances, 0, this.size()));}
public ListReportingExecutionsResult listReportingExecutions(ListReportingExecutionsRequest request) {return executeListReportingExecutions(request);}
public DescribeJobRequest (String vaultName, String jobId) {setJobId(jobId);}
public EscherRecord getEscherRecord(int index) {return escherRecords.get(index);}
public GetApiResult getApis(GetApiRequest request) {return getApis(request);}
public DeleteMessageResult deleteMessage(String message) {return deleteMessage(message);}
public ConflictingRefUpdate getConflictingRefUpdate() {return ConflictingRefUpdate.getInstance();}
public String toString() {return this.toString();}
public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public NotIgnoredFilter(int directoryTreeIndex) {this.index = directoryTreeIndex;}public NotIgnoredFilter(int directoryTreeIndex) {this.index = directoryTreeIndex
public AreaRecord(RecordInputStream in) {field_1_formatFlags = in.readShort();}
public GetThumbnailRequest() {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public DescribeTransitGatewaysResult describeTransitGateways(DescribeTransitGatewaysRequest request) {return describeTransitGateways(request);}
public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorStreamingConfiguration(request);}
public final NumRange getOrdSum(String dim) {return new NumRange(dim);}
public String toString() {final String symbol = "";if (startIndex >= 0 && startIndex < getInputStream().size()) {symbol = StringUtils.escapeWhitespace(symbol, false);}return new
public BlendedTermQuery peek() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request) {return createWorkspaces(request);}
public final void run() {flush();}
public DescribeRepositoriesResult describeRepositories(DescribeRepositoriesRequest request) {request = beforeClientExecution(request);return describeRepositories(request);}
public SrndIntArray(int initialCapacity) {mCapacity = ArrayUtil.intArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[
public HumanizedWordsFilter create(TokenStream input) {return new HumanizedWordsFilter(input);}
public CreateDistributionWithTagsResult createDistributionWithTags(CreateDistributionWithTagsRequest request) {return executeCreateDistributionWithTags(request);}
public RandomAccessFile(String filename, String mode) throws IOException {this(new File(filename), mode);}
public DeleteWorkspaceImageResult deleteWorkspaceImage() {return deleteWorkspaceImage(request);}
public static String toHexString(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, "");return sb.toString();}
public UpdateDistributionResult updateDistribution(UpdateDistributionRequest request) {if (request == null) {return new UpdateDistributionRequest();} else if (request.getStatusCode() == null) {
public Color getColor(int index) {if (color == null) {return null;}int b = _colour.getColor(index);return (b == null)? null :
public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedException(_functionName);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_number_crn_records);out.writeShort(field_2_sheet_table_
public DescribeDBInstanceVersionsResult describeDBInstanceVersions() {return describeDBInstanceVersions(new DescribeDBInstanceVersionsRequest());}
public FormatRun(String character, int fontIndex) {this.character = character;this.fontIndex = fontIndex;}
public static byte[] toByteArray(char[] chars, int offset, int length) {final byte[] result = new byte[length * 2];for (int i = offset; i < end
public UploadResult upload() {return upload(new UploadRequest());}
public List<Token> getHiddenTokensToLeft(int tokenIndex) {return getHiddenTokensToLeft(tokenIndex, -1);}
public boolean equals(Object obj) {if (this == obj) return true;if (!super.equals(obj)) return false;if (getClass()!= obj.getClass())
public SpanQuery makeSpanClause() {SpanQuery[] spanQueries = new SpanQuery[size()];for (SpanQuery q : weightBySpanQuery.keySet()) {SpanQuery q
public void run() {drain();}
public FieldInfo fieldInfo(String fieldName) {return byName.get(fieldName);}
public DescribeEventSourceResult describeEventSource() {return describeEventSource(request);}
public GetDocumentAnalysisResult getDocumentAnalysis(Request request) {return createDocumentAnalysis(request);}
public CancelTaskResult cancel() {return new CancelTask(this);}
public ModifyLoadBalancerAttributesResult modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {return executeModifyLoadBalancerAttributes(request);}
public SetInstanceProtectionResult setInstanceProtection(SetInstanceProtectionRequest request) {return setInstanceProtection(request);}
public ModifyDatabaseResult modifyDatabase() {return executeModifyDatabase(request);}
public void add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {outputs = ArrayUtil.grow(
public FetchLibrariesRequest() {super("CloudPhoto", "2017-07-11", "FetchLibraries", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public boolean exists() {return fs.exists(paths);}
public FilterOutputStream(OutputStream out) {this.out = out;}
public ScaleClusterRequest() {super("CS", "2016-06-07", "ScaleCluster", "csk");setUriPattern("/clusters/[ClusterId]");setMethod
public DataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {return new TimeConstraint(operatorType, formula1, formula2);}
public ListObjectParentPathsResult listObjectParentPaths(ListObjectParentPathsRequest request) {return executeListObjectParentPaths(request);}
public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {return describeCacheSubnetGroups(request);}
public void setSharedFormula(boolean flag) {field_5_options = sharedFormula.setShortBoolean(field_5_options);}
public final void clear() {remove();}
public ErrorNode addErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addChild(t);return t;}
public final void              }
public EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {return removeSourceIdentifierFromSubscription(request);}
public static TokenFilterFactory forName(String name, Map<String,String> args) {return factory.newInstance(name, args);}
public AddAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "AddAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public GetThermalAssessmentResult getThermalAssessment(GetThermalAssessmentRequest request) {return getThermalAssessment(request);}
public final RevFilter clone() {return new RevFilter(a.clone(), b.clone());}
public final void reset() {counter = 0;}
public String toString() {return this.toString();}
public UpdateContactServiceDetailsResult updateContactServiceDetails(UpdateContactServiceDetailsRequest request) {return updateContactServiceDetails(request);}
public void unrwProtectWorkbook() {records.remove(writeProtect);fileWriter = null;writeProtect = null;}
public SrSemanticParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, Analyzer.class);this.expand = expand;}
public void start() {this.startTime = System.currentTimeMillis();}
public byte[] getObjectData() {return getObjectRecord().getObjectId();}
public GetContactAttributesResult getContactAttributes() {return new GetContactAttributesResult();}
public String toString() {return key;}
public ListTextTransl
public GetContactPointsResult getContactPoints() {return getContactPoints(request);}
public static short lookupIndexByName(String name) {FunctionMetadata fi = getInstance().getFunctionByName(name);if (fi == null) {fi = getInstance().getFunctionByName(name
public DescribeAnalyzersResult describeAnalyzers(DescribeAnalyzersRequest request) {return describeAnalyzers(request);}
public static String insertId(String message, ObjectId changeId) {return insertId(message, changeId, false);}
public long getObjectSize(AnyObjectId objectId, int typeHint)throws MissingObjectException, IncorrectObjectTypeException, IOException {long sz = db.getObjectSize(this, objectId);if
public DownloadProgress downloadProgress(Request request) {request = beforeClientExecution(request);return executeDownloadProgress(request);}
public PutLifecycleEventHookExecutionStatusResult putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {request = beforeClientExecution(request);return executePutLifecycleEventHookExecutionStatus
public final void               
public GetFieldLevelEncryptionConfigResult getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {return getFieldLevelEncryptionConfig(request);}
public DescribeDetectorResult describeDetector() {return describeDetector(request);}
public void reset() {}
public void clear() {this.size = 0;for(int i=0; i<this.size; i++) {this.remove(i);}}
public final TokenStream create(TokenStream input) {return new FeatStemFilter(input);}
public RdfCbsSubRecord() {reserved = new byte[ENCODED_SIZE];}}] = new byte[ENCODED_SIZE];}
public boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}
public GetDedicatedIpResult getDedicatedIp(GetDedicatedIpRequest request) {return getDedicatedIp(request);}
public String toString() {return precedence + " >= _p";}
public ListStreamsResult listStreams() {return new ListStreamsResult(this);}
public DeleteLoadBalancerPolicyRequest (String loadBalancerName, String policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}
public void resize() {                                  
public UnbufferedCharStream(int bufferSize) {n = 0;data = new int[bufferSize];}int[] buffer = new int[bufferSize];}
public GetOperationsResult getOperations() {return getOperationCountMap().get(request);}
public void copyRawTo(byte[] b, int o) {B.encodeInt32(b, o, w1);B.encodeInt32(b, o + 4,
public Window1Record(RecordInputStream in) {field_1_h_room  = in.readShort();field_2_v_room  = in.readShort();field
public StopWorkspacesResult stopWorkspaces() {return stopWorkspaces(true);}
public void close() throws IOException {if (isOpen) {try {close();} finally {try {close();} finally {try {close();} finally {try {close();}
public DescribeMatchmakingRuleSetsResult describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {return describeMatchmakingRuleSets(request);}
public String getPatron(int wordId, char sentence[], int off, int len) {return null; }
public void flush() {flush();}
public static double norms(double[] v) {double r = Double.NaN;if (v!=null && v.length >= 1) {double m = 0;double s
public DescribeResizeResult describeResize() {return describeResize(new DescribeResizeRequest());}
public boolean passedThroughNonGreedyDecision() {return passedThroughNonGreedyDecision;}
public void end() {output.writeByte(TC_END);}
public void traverse(CellHandler handler) {int firstRow = range.getFirstRow();int lastRow  = range.getLastRow();int firstColumn = range.getFirstColumn
public int getReadIndex() {return pos;}
public int compareTo(ScoreTerm other) {if (this.boost == other.boost) {return this.bytes.get().compareTo(other.bytes.get());} else {
public int normalize(char s[], int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case FLAS_Y
public final void write ()  {
public DiagnosticErrorListener(boolean exactOnly) {this.exactOnly = exactOnly;}
public KeySchemaElement(String attributeName, KeyType keyType) {setAttributeName(attributeName);setKeyType(keyType.toString());}
public void reset() {this.resetState();}
public boolean hasObject(AnyObjectId id) {return findOffset(id)!= -1;}
public GroupingSearch setAllGroups(boolean allGroups) {this.allGroups = allGroups;return this;}
public void setMultiValue(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig
public int getCellsCount() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i
public DeleteVoiceConnectorResult deleteVoiceConnector(DeleteVoiceConnectorRequest request) {return deleteVoiceConnector(request);}
public DeleteLifecyclePolicyResult deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {return deleteLifecyclePolicy(request);}
public void write(byte[] b) {checkPosition(b.length);for (int i = 0; i < len; i++) {if (i == 0) {break;
public void run()            }
public static int getMaximumSetSize(int maxNumberOfValuesExpected, float preferredScale) {for (int i = 0; i < availableSetSizes.length; i++) {int numSet
public DescribeDashboardResult describeDashboard() {return describeDashboard(new DescribeDashboardRequest());}
public CreateSegmentResult createSegment(String segment) {return createSegment(segment, 0, segment.length);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[DBCELL]\n");buffer.append("   .rowoffset = ").append(Integer.toHexString(
public final void            }
public String toString() {return "<InterfaceEnd>";}
public MergeScheduler clone() {return this;}
public void translate(String text) {if (text == null) {throw new NullPointerException();}translate(text, 0, text.length());}
public StringBuilder append(CharSequence cs) {if (cs == null) {appendNull();} else {append0(cs, 0, cs.length());}return this;}
public DescribeInstancesResult listInstances() {return executeDescribeInstances(ArrayUtil.copyOfSubArray(instances, 0, numInstances),ArrayUtil.copyOfSubArray(boosts,
public static double average(double[] v) {double r = 0;double m = 0;for (int i=0, iSize=v.length; i<iSize;
public DescribeBytecodeSubnetsResult describeBytecodeSubnets(DescribeBytecodeSubnetsRequest request) {request = beforeClientExecution(request);return executeDescribeBytecodeSubnets(request);}
public GetDiskResult getDisk(GetDiskRequest request) {return new GetDisk(request);}
public DBInstance createDBInstance(CreateDBInstanceRequest request) {request = beforeClientExecution(request);return executeCreateDBInstance(request);}
public static char[] wrap(char[] array, int start, int charCount) {Arrays.checkPositionAndCount(array.length, start, charCount);charBuffer buf = new
public SubmoduleStatusType getType() {return (SubmoduleStatus) type;}
public DescribeInstancesResult describeInstances() {return describeInstances(ArrayUtil.copyOfSubArray(instances, 0, numInstances),ArrayUtil.copyOfSubArray(boosts, 0
public String metricFilterPattern() {return this.metricFilterPattern;}
public final void setValue(V value) {throw new IllegalStateException();} return value;}
public final StringBuilder stem(CharSequence word) {if (cmd == null) {return null;}buffer.append(word);if (buffer.length() > 0) {return buffer
public RenameFaceRequest() {super("CloudPhoto", "2017-07-11", "RenameFace", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public final char requireChar(Map<String,String> args, String name) {return require(args, name).charAt(0);}
public static String toStringTree(Tree t) {return toStringTree(t, (List<String>) null);}
public String toString() {return "<Deleted/>";}
public GetRepoAuditLogListRequest() {super("cr", "2016-06-07", "GetRepoAuditLogList", "cr");setUriPattern("/repos/[Repo
public GetJobUnlockCodeResult getJobUnlockCode(GetJobUnlockCodeRequest request) {return executeGetJobUnlockCode(request);}
public void removeTags(String tag) {if (tag == null) {return;}removeTags(tag);}
public final short getBG2312Id(char ch) {final byte[] buffer = new byte[Character.toHexString(ch).getBytes("UTF-16BE")];if (
public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {if (cmd == null) {return null;}addCommand(cmd.toArray(new ReceiveCommand[0])
public short checkExternSheet(int sheetNumber) {return getOrCreateLinkTable().checkExternSheet(sheetNumber);}
public final void close() {drain();}
public boolean build(QueryNode queryNode) throws QueryNodeException {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.
public DescribeStreamProcessorResult describeStreamProcessor(Request request) {return describeStreamProcessor(request);}
public DescribeUsersResult describeUsers() {return describeUsers(ArrayUtil.copyOfSubArray(users, 0, numUsers),ArrayUtil.copyOfSubArray(boosts, 0
public final Ref peel(Ref ref) {try {return getRefDatabase().peel(ref);} catch (IOException e) {return ref;}}
public long ramBytesUsed() {return RamUsageEstimator.calcObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ RamUsage
public GetDomainFindingsResult getDomainFindings(GetDomainFindingsRequest request) {return getDomainFindings(request);}
public void report() {if (trace) {System.out.println(trace);} else if (trace) {System.out.println(trace);} else {System.out
public void setRule(int idx, ConcreteFormattingRule cfRule) {setRule(idx, (HSSFConditionalFormattingRule)cfRule);}
public CreateResolverRuleResult createResolverRule(CreateResolverRuleRequest request) {return executeCreateResolverRule(request);}
public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.readShort();}
public GetStylesRequest() {super("lubancloud", "2018-07-05", "GetStyles", "luban");setMethod(MethodType.POST);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_gridset_flag);}
public boolean equals(Object obj) {if (this == obj) {return false;}if (getClass()!= obj.getClass()) {return false;}Tpts other =
public CreateGatewayResult createGateway() {return createGateway(this);}
public CreateActivityResult createActivity() {return executeActivity(new CreateActivityResult() {@Override
public static double irr(double[] balance) {return irr(balance, 0.1d);}
public void registerWorkspaceDirectory(Request request) {if (request == null) {throw new SdkClientException("Invalid argument passed to registerWorkspaceDirectory(request);} else if (request.getStatusCode
public RevertCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval innumVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(
public E peekLast() {Map.Entry<E, Object> entry = backingMap.peekLastEntry();return (entry == null)? null : entry.getKey();}
public int readUShort() {int ch1 = readUByte();int ch2 = readUByte();return (ch1 << 8) + (ch2 << 0);}
public ModifySnapshotAttributeValueResult modifySnapshotAttributeValue(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {setSnapshotId(snapshotId);setAttribute(attribute.toString());setOperation
public ListScoresResult listScores() {return new ArrayList<>();}
public final V get(CharSequence cs) {if (cs == null) {throw new NullPointerException();} else {return null;}}
public TokenFilter create(TokenStream input) {CommonWordsFilter commonWords = (CommonWordsFilter) super.create(input);return new CommonWordsQueryFilter(commonWords);}
public String toString() {return this.toString();}
public UploadResult upload() {return executeUpload(new UploadRequest());}
public StringBuilder insert(int offset, int i) {insert0(offset, Integer.toString(i));return this;}
public final void decode(long[] blocks, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) { final long block = blocks[blocks
public RuleFilter create(TokenStream input) {return new RuleFilter(input, articles);}
public boolean rewind(Row in, int remap) {int sum = 0;for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {
public final Token getToken(int index) {Token t = jj_scanning_backward? jj_scanpos : token;for (int i = 0; i < index; i++)
public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(" [ARRAY]\n");sb.append(" options=").append(getRange
public GetMultipartUploadResult getFolder(GetMultipartUploadRequest request) {request = beforeClientExecution(request);return new GetMultipartUpload(request);}
public void add(int location, E object) {throw new UnsupportedOperationException();}
public void translate(float f) {if (f == null) {throw new NullPointerException();}in.translate(f);}
public CreateRepoBuildRuleRequest() {super("cr", "2016-06-07", "CreateRepoBuildRule", "cr");setUriPattern("/repos/[RepoNamespace]/
public BRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = a
public DrawingManager2(EscherDggRecord dgg) {this.dgg = dgg;}
public final void reset() {                                 
public final CharsetDecoder reset() {state = INITIAL;implReset();return this;}
public final Reader (Reader in, int size) {if (size <= 0) {throw new IllegalArgumentException("size <= 0");}this.in = in;buf = new char[size
public DescribeCodeRepositoryResult describeCodeRepository(DescribeCodeRepositoryRequest request) {return describeCodeRepository(request);}
public DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBSubnetGroup(request);}
public RenameBranchCommand setNewName(String newName) {checkCallable();this.newName = newName;}
public DeleteBranchCommand setForce(boolean force) {checkCallable(force);return this;}
public StopCompilationJobResult stopCompilationJob(StopCompilationJobRequest request) {request = beforeClientExecution(request);return executeStopCompilationJob(request);}
public void increaseSecondProgressBy(int delta) {setSecondProgress(getSecondProgress() + delta);}
public int[] clear() {return bytesStart = null;}
public String getRawPath() {return path;}
public GetUserSourceAccountResult() {super("cr", "2016-06-07", "GetUserSourceAccount", "cr");setUriPattern("/users/sourceAccount");setMethod
public CreateExportJobResult createExportJob(CreateExportJobRequest request) {request = beforeClientExecution(request);return executeCreateExportJob(request);}
public CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {request = beforeClientExecution(request);return executeCreateDedicatedIpPool(
public boolean equals(Object obj) {if (this == obj) {return false;}if (obj instanceof HSSFCellStyle) {HSSFCellStyle other = (H
public void clear() {this.size = 0;this.elements = new ArrayList<>();this.positions = new ArrayList<>();this.slop = 0;this.slop =
public boolean equals(Object object) {if (this == object) {return true;}if (size() == s.size() && containsAll(s)) {return false;}
public void setRefLogMessage(String msg, boolean appendStatus) {if (msg == null &&!appendStatus) {refLogMessage = ""; refLogIncludeResult = true;
public StreamID record(RecordInputStream in) {idmt = in.readShort();}
public DetectCarRequest() {super("visionai-poc", "202-06-07", "RecognizeCar");setMethod(MethodType.POST);} else {super("vision
public final byte[] toByteArray() {return new byte[toByteArray()];}
public int getAheadCount() {return forwardCount;}
public boolean isNew() {return true;}
public GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {request = beforeClientExecution(request);return executeGetCloudFrontOriginAccess
public boolean matches(int symbol, int minVocabSymbolic, int maxVocabSymbolic) {return symbol == null;} catch (IllegalArgumentException e) {return e == null;
public void reset() {this.statusCode = 2020;this.statusCode = 2020; this.statusCode = 2020; this.statusCode = 2020; this.statusCode = 2020
public static byte[] grow(byte[] array, int minSize) {if (array.length < minSize) {return growExact(array, oversize(minSize, Byte.BYTES));
public CreateTransactionRequest() {super("CloudPhoto", "2017-07-11", "CreateTransaction", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public BatchRefUpdate setRefLogIdent(PersonIdent pi) {return this;}
public GetLaunchTemplateResult getLaunchTemplate() {return new GetLaunchTemplateResult(this);}
public ParseInfo(Solution atnSolution) {this.atnSolution = atnSolution;}) {this.atnSolution = atnSolution;}
public SimpleQQParser(String qqNames[], String indexField) {this.qqNames = qqNames;this.indexField = indexField;}
public DBInstance promoteReadReplicaDBCluster(DBInstance request) {request = beforeClientExecution(request);return executeMigrateReadReplicaDBCluster(request);}
public DescribeCapacityCapacityResult describeCapacityCapacity(DescribeCapacityCapacityRequest request) {return describeCapacityCapacity(request);}
public String toString() {return "IndexSearcher(" + reader + "; executor=" + executor + "); }
public String metricFilterPattern() {return this.metricFilterPattern;}
public void serialize(LittleEndianOutput out) {out.writeShort(1);out.writeShort(subFrom);out.writeShort(subTo);}
public final void decode(byte[] blocks, int blocksOffset, int valuesOffset) throws IOException {if (bitsPerValue > 32) {throw new UnsupportedOperationException("Cannot decode " + bits
public boolean isExpectedToken(int symbol) {ATN atn = getInterpreter().atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states.
public UpdateStreamResult updateStream(UpdateStreamRequest request) {request = beforeClientExecution(request);return executeUpdateStream(request);}
public final ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return Error
public String toString() {return getClass().getSimpleName() + " [" + _index + " ]";}
public ListAssignmentsResult listAssignments() {return new ArrayList<>(iterator()).toArray(new ArrayList<>()) {@Override
public DeleteSecurityGroupResult deleteSecurityGroup(String bucketName) {return deleteSecurityGroup(bucketName);}
public Path getFirstArc(Path<Long> path) {return fs.getFirstArc(path);}
public final void decode(long[] blocks, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) { final long block = blocks[values
public long skip(long charCount) throws IOException {if (charCount < 0) {throw new IllegalArgumentException("charCount < 0: " + charCount);}synchronized (lock) {
public Map<String, Ref> getRefsMap() {return Collections.singleton(new Ref(ref));}
public UpdateApiResult updateApi(UpdateApiRequest request) {this.request = request;return executeUpdateApi(request);}
public MissingObjectException openStream() throws IOException {try {PackInputStream packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null;} catch (IOException pack
public ArrayList() {return new ArrayList<>();}
public UpdateDetectorResult updateDetector() {return updateDetector(request);}
public void commit() {flush();}
public final void write () { }
public int size() {return size;}
public final long getLong() {if (position > limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset, order);position
public final StringBuilder insert(int offset, long l) {insert0(offset, Long.toString(l));return this;}
public ThreeDigitFilter(TokenStream in) {super(in, false);}
public void match(ParseTree tree, Pattern pattern) {Matcher matcher = new Matcher();matcher.setPattern(pattern);matcher.removeAllElements();}
public void addIfNoOverlap( WeightedPhraseInfo pt ) {if ( pt.isOverflowOverflow( pt ) ) { pt.getTermsInfos().add( pt ) ; } }
public ThreeWayMerge newMerger(Repository db) {return new IncoreMerge(db);}
public static float docScore(int docId, String field, int numPayloadsSent, float payloadScore) {return (numPayloadsSent > 0? (payloadScore / numPayloads
public List<ParseTree> evaluate(ParseTree t) {return Tree.findAllRuleNodes(t, ruleIndex);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[CFRUN]\n");buffer.append("   .option_type = ").append(getConditionType
public DescribeServiceResult describeService(String serviceName) {return describeService(serviceName);}
public String getNameName(int index) {return getNameName(index);}
public DescribeRegionsResult describeRegions() {return describeRegions(new DescribeRegionsRequest());}
public String toString() {return "<phrasesplit value='" + getValueString() + "'>" + "</phrasesplit>" + "\n" + getChild().toString() + "\n" +
public DirCacheEntry getDirCacheEntry() {return currentSubtree == null? null : new DirCacheEntry();}
public final int put(int[] src, int len) {if (len > 0) {throw new BufferOverflowException();}for (int i = 0; i < len; ++
public void trimToSize() {int s = size;if (s == 0) {return;}if (s == 0) {array = EmptyArray.OBJECT;} else {
public DescribeLocalGatewayVirtualNetworksResult describeLocalGatewayVirtualNetworks(DescribeLocalGatewayVirtualNetworksRequest request) {return describeLocalGatewayVirtualNetworks(request);}
public TokenStream create(TokenStream input) {return new RomanStemFilter(input);}
public int[] toArray(int[] a) {int[] rv = new int[a.length];if (a.length == limit) {System.arraycopy(a, 0,
public BaseSessionCredentials(String accessKeyId, String accessKeySecret, Long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException("Access key ID cannot be null
public final ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy
public void activate() {this.activate();}
public DescribeReceiptRuleSetResult describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {return executeDescribeReceiptRuleSet(request);}
public void translate(String text) {if (text == null) {throw new NullPointerException();}translate(text, 0, text.length());}
public final void close() {buffer = null;for (int i = 0; i < size; i++) {buffer.put(i, 0);}
public CreateTrafficPolicyResult createTrafficPolicy() {return new CreateTrafficPolicyResult(this);}
public JapanIteratorMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKanji) {super(input);this.normalizeKanji = normalizeKanji
public final void writeLong(long v) {writeInt(v >>> 0);writeInt(v >>> 32);}
public FileResolver() {exports = new ConcurrentHashMap<>();exportBase = new ArrayList<>();}
public ValueEval getRef3DEval(Ref3DPxg rptg) {FormulaRefEvaluator sre = new FormulaRefEvaluator(rptg.getSheetName(), rpt
public DeleteDatasetResult deleteDataset(DeleteDatasetRequest request) {request = beforeClientExecution(request);return deleteDataset(request);}
public void reset() {this.reset();}
public DescribeReservedCacheOffsetsResult describeReservedCacheOffsets() {return describeReservedCacheOffsets(new DescribeReservedCacheOffsetsRequest());}
public static double ppt(double r, int nper, double pv, double fv, int type) {return -r * (pv * Math.pow(1 + r, n
public DescribeDocumentResult describe() {return executeDescribeDocument(request);}
public ListDestinationResult listDestination() {return new ListDestination(this.request, this.response, this.statusCode, this.headers);}
public void deleteAccount(String accountNumber) {this.accountNumber = accountNumber;}
public static long[] grow(long[] array) {return grow(array, 1 + array.length);}
public String outputToString() {if (!(output instanceof List)) {return outputs.outputToString(0);} else {return outputs.outputToString(1);} } }
public void notifyDeleteCell(Cell cell) {_bookEvaluator.notifyDeleteCell(cell);}
public StringBuilder replace(int start, int end, String str) {replace0(start, end, str);return this;}
public SetIdentityProviderConfigurationResult setIdentityProviderConfiguration(SetIdentityProviderConfigurationRequest request) {request = beforeClientExecution(request);return executeSetIdentityProviderConfiguration(request);}
public static double kthSmallest(double[] v, int k) {double r = Double.NaN;int index = k - 1; if (v!= null && v.length
public void set(int index, long value) {final int o = index >> 5;final int b = index & 31;final int shift = b << 1;blocks[o]
public String toString() {if (getChildren() == null || getChildren().size() == 0)return "<boolean operation='and>'";StringBuilder sb = new StringBuilder();sb.append("<
public int sumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i=fromIx; i<toIx; i++)
public void setReadOnly(boolean readonly) throws IOException {if (readonly &&!readonly) {throw new IllegalStateException("can't modify readonly IntervalSet");}this.readonly = readonly;}
public void clearConsumingCell(FormulaCellEntry cce) {if (!_consumingCells.contains(cce)) {throw new IllegalStateException("Specified formula cell is not consumed by this
public synchronized List<E> subList(int start, int end) {synchronized (lock) {return new ConcurrentHashMap<>(list, start, end);}}
public String toString() {return this.toString();}
public AttachmentsResult attach() {return attach(new AttachmentsRequest());}
public void initiate() {setAccountId(accountId);setJobParameters(jobParameters);}
public final void pop() { return ; }
public ReplaceableAttribute(String name, String value, boolean replace) {setName(name);setValue(value);}
public final void add(Element element) {if ( element == null) {elements.add( element );} else {elements.add( element );} }
public DeleteStackSetResult deleteStackSet(Integer size) {if (size == 0) {return null;} else if (size == 0) {return 0;} else if (
public GetRepoBuildRuleListRequest() {super("cr", "2016-06-07", "GetRepoBuildRuleList", "cr");setUriPattern("/repos/[Repo
public SrndArray(int initialCapacity) {this.initialCapacity = new int[initialCapacity];mKeys = new int[initialCapacity];mValues = new Object[initialCapacity
public ExecuteServiceRequest() {super("industry-b", "2018-07-12", "ExecuteService");setMethod(MethodType.POST);}
public ListAlbumPhotosRequest() {super("CloudPhoto", "2017-07-11", "ListAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public boolean hasNext() {return link!= null;}
public DeleteSubnetResult deleteSubnet(String subnet) {return deleteSubnet(subnet);}
public CreateLoadBalancerRequest(String loadBalancerName) {setLoadBalancerName(loadBalancerName);}
public String getUserInfo() {return decode(userInfo);}
public void tag(String tag) {if (tag == null) {tag = null;} else {tag = tag;}}
public String displayName() {return this.displayName;}
public SpanNearQuery build() {return new SpanNearQuery(clauses.toArray(new SpanQuery[clauses.size()]));}
public boolean isSubTotal(int rowIndex, int columnIndex) {return false;}
public DescribeDBProxiesResult describeDBProxies(DescribeDBProxiesRequest request) {return describeDBProxies(request);}
public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public WindowCacheConfig fromConfig(Config rc) {setPackedGitUseStrongRefs(rc.getBoolean(CONFIG_CONFIG_SECTION, null, CONFIG_KEY_PACKED
public static Date getJavaDate(double date) {return getJavaDate(date, false, null, false);}
public void start() {this.startTime = System.currentTimeMillis();}
public int size() {return size;}
public GetRouteResult getRoute(Request request) {return new GetRoute(request);}
public void clear() {this.size = 0;this.elements = new ArrayList<>();this.positions = new ArrayList<>();this.positions.addAll(new ArrayList<>());}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[MSM]\n");buffer.append("   .addMenu  = ").append(Integer.toHexString
public FileBuiltConfig(Config base, File cfgFile, FS fs) {super(base);configFile = cfgFile;this.fs = fs;this.snapshot = new FileSnapshot
public int following(int pos) {if (pos < text.getStartIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException("offset out of bounds");} else if (
public UpdateParameterGroupRequest updateParameterGroupRequest() {return updateParameterGroupRequest.execute();}
public final void end() { }
public static double calcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0
public final int codePointAt(int index) {if (index < 0 || index >= count) {throw indexAndLength(index);}return Character.codePointAt(value, index
public void setPasswordVerifier(int passwordVerifier) {this.passwordVerifier = passwordVerifier;}
public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public GitMessageFormatter() {dateFormatter = new GitDateFormatter(LocaleUtil.getDefault());}
public GetVideoBoundaryRequest() {super("CloudPhoto", "2017-07-11", "GetVideoBoundary", "cloudphoto");setProtocol(ProtocolType.HTTPS);} else {
public int lastIndexOf(Object object) {int pos = size;Link<E> link = voidLink.previous;if (object!= null) {while (link!= voidLink) {
public DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetRequests(request);}
public void indexResults() {for (int i = 0; i < history.size(); i++) { if (history.isEmpty()) {break;} else if (history.is
public RuleBasedBreakIterator getBreakIterator(int script) {switch (script) {case Japanese:return (RuleBasedBreakIterator) jjkBreakIterator.clone();case
public String toString() {StringBuilder b = new StringBuilder();b.append("[DCONREF]\n");b.append("   .firstrow  = ").append(getFirstRow
public int getPackedGitOpenFiles() {return packedGitOpenFiles;}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[FEATURE HEADER]\n");buffer.append("/FEATURE BODY]\n");return buffer.toString();}
public static byte[] toUnicodeLE(String string) {return string.getBytes(UTF_8);}
public ArrayList<HeaderLine> getFooterLines(String keyName) {return getFooterLines(new HeaderKey(keyName));}
public void refresh() {flush();}
public float get(int index) {checkIndex(index);return byteBuffer.getFloat(index * SizeOf.FLOAT);}
public DeleteDetectorResult deleteDetector(DeleteDetectorRequest request) {return deleteDetector(request);}
public int[] grow() {return bytesStart!= null? bytesStart : new int[1];}
public ListExclusionsResult listExclusions(ListExclusionsRequest request) {return listExclusions(request);}
public static SpatialStrategy getSVGStrategy(int roundNumber) {SpatialStrategy result = SpatialStrategyCache.get(roundNumber);if (result == null) {throw new RuntimeException("Strategy must
public DBInstance restoreDBInstanceToPointInTime(RestoreDBInstanceToPointInTimeRequest request) {request = beforeClientExecution(request);return executeRestoreDBInstanceToPointInTime(request);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_categoryDataType);out.writeShort(field_2_valuesDataType);out.write
public PostAgentResult postAgent() {return new PostAgent(this);}
public final void parseParseTreePattern(String pattern, int patternRuleIndex) {if (getTokenStream()!= null ) {Tokenizer lexer = getTokenStream();return parseParseTreePattern(
public DBInstance backupDBCluster(Request request) {request = beforeClientExecution(request);return executeBackupDBCluster(request);}
public String displayName() {return this.displayName;}
public void copyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 16, w4);}
public static int lineMap(byte[] buf, int ptr, int end) {List<Integer> map = new ArrayList<>(end - ptr) / 10;for (; ptr <
public Set<ObjectId> getAdditions() {return Collections.emptySet();}
public long ramBytesUsed() {long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF
public String toXml(String tab) {StringBuilder builder = new StringBuilder();builder.append(getRecordName()).append("\n" );for (EscherRecord escherRecord :
public TokenStream create(TokenStream input) {return new GreeterMinimalStemFilter(input, new Config());}
public String toString() {StringBuilder r = new StringBuilder();r.append("Commit");r.append("tree ");r.append(treeId!= null? treeId.name() :
public final void run() {return end();}
public OptionGroup createOptionGroup() {return new OptionGroup(this);}
public AssociateAccountResult associateAccount(String accountName) {return associateAccount(accountName);}
public void doRefreshProgress(int mId, mProgress, boolean mFromUser) {mRefCount = 0;refCount = 0;refCount = 0;refCount = 0
public SetTerminationProtectionResult setTerminationProtection(SetTerminationProtectionRequest request) {return setTerminationProtection(request);}
public String getErrorHeader(RecognitionException e) {final int line = e.getOffendingToken().getLine();final int charPositionInLine = e.getOffendingToken().
public final CharBuffer asReadOnlyBuffer() {final CharBufferAdapter buf = new CharBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;
public StopSentenceDetectionJobResult stopSentenceDetectionJob(StopSentenceDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopSentenceDetectionJob(request);}
public ObjectIdSubClassMap getNewObjectIdIds() {if (newObjectIdIds!= null) {return newObjectIds;}return new ObjectIdSubClassMap<>();}
public void clear() {hash = new byte[0];super.clear();}
public void reset() throws IOException {synchronized (lock) {checkNotClosed();if (mark == -1) {throw new IOException("Invalid mark");}pos = mark;}
public RefErrorPtg(LittleEndianInput in) {field_1_reserved = in.readInt();}
public void stop() {this.stop();}
public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length!= 3) {return ErrorEval.VALUE_INVALID;}return
public GetRepoRequest() {super("cr", "2016-06-07", "GetRepo", "cr");setUriPattern("/repos/[RepoNamespace]/[RepoName]"
public void setDate(Date date) {if (date!= null) {setDate(DateUtils.dateToString(date, LocaleUtil.getLocale()));} else {setDate(
public TokenStream create(TokenStream input) {return new EnglishMinimalStemFilter(input);}
public Object[] toArray() {return a.clone();}
public final void write(char[] buffer, int offset, int len) {Arrays.checkOffsetAndCount(buffer, offset, len);for (int i = 0; i < len
public void end() {output.writeByte(TC_END);}
public DeleteSecurityGroupRequest(String groupName, String roleName) {if (policyName == null) {throw new IllegalArgumentException("Invalid argument passed to deleteSecurityGroup(...)");} else if (policyName.
public DVConnector getDVConnector() {return getDVConnector(request);}
public DeleteScheduledActionResult batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {request = beforeClientExecution(request);return executeBatchDeleteScheduledAction(request);}
public CreateAlgorithmResult createAlgorithm(CreateAlgorithmRequest request) {request = beforeClientExecution(request);return executeCreateAlgorithm(request);}
public final int read() {return read();}
public void setLength(int sz) {checkWritePrimitiveTypes();primitiveTypes.setLength(sz);}
public DescribeScalingProcessTypesResult describeScalingProcessTypes() {return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}
public ListResourceRecordsResult listResourceRecords(Request request) {return executeListResourceRecords(request);}
public Token consume(Parser recognizer) {Exception e = new ParseException(recognizer);for (ParserContext context = recognizer.getContext()) {context.exception = e;}
public void setTags(String tag) {this.tag = tag;}
public ModifyStrategyRequest() {super("CloudCallClient", "2017-07-07", "ModifyStrategy", "CloudCallClient");}
public DescribeVpcServicesResult describeVpcServices(DescribeVpcServicesRequest request) {return describeVpcServices(request);}
public EnableLoggingResult enableLogging(EnableLoggingRequest request) {request = beforeClientExecution(request);return executeEnableLogging(request);}
public boolean contains(Object o) {return ConcurrentHashMap.this.containsValue(o);} else {return false;}}
public SheetRangeIdentifier(String sheetName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(sheetName, firstSheetIdentifier);_lastSheetIdentifier = lastSheetIdentifier
public DomainMetadataRequest(String domainName) {super(domainName);}
public ParseException parseException(int[] expectedTokenValues, String imageValue) {super(new ErrorImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenValues, expectedToken
public FetchPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public FormatRecord getFormatRecord() {return new FormatRecord(this);}
public GramTokenizerFactory(Map<String,String> args) {super(args);minGramSize = getInt(args, "minGramSize", Integer.MAX_G
public boolean isDirectoryFileConflict() {return dbConflict!= null;}public boolean isDirectoryFileConflict() {return dbConflict!= null;}
public PhraseStemFilter(TokenStream input, boolean stemDerivative) {super(input);this.stemDerivative = stemDerivative;}
public CreateTrafficPolicyResult createTrafficPolicy() {return new CreateTrafficPolicyResult(this);}
public void serialize(LittleEndianOutput out) {out.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out, title);out.write(securityDescriptor);}
public static double round(double n, double s) {if (s == 0 && n!=0 ) return Math.nan; else {return Math.round(n/s)
public ByteArrayDataOutput(byte[] bytes, int offset, int len) {checkPosition(bytes, offset, len);read(bytes, offset, len);}
public static List<Tree> getChildren(Tree t) {List<Tree> elems = new ArrayList<>();for (int i = 0; i < t.getChildCount(); i++)
public final void clear() {                      
public RefreshAllRecord(boolean refreshAll) {this(0);setRefreshAll(refreshAll);}
public DeleteQueryResult deleteQuery() {return new DeleteQuery(this);}
public void printer(ConnectScores outputs) {this.costs = outputs;this.bestPathMap = new HashMap<>();sb.append(formatHeader());sb.append("\n
public CheckMultiwordRequest() {super("visionai-poc", "202-06-07", "CheckMultiword");setMethod(MethodType.POST);} else {super("
public ListUsersResult listUsers() {return executeListUsers(new ArrayList<>()) {@Override
public CreateInternetBackupResult createInternetBackup(CreateInternetBackupRequest request) {return createInternetBackup(request);}
public StartTaskResult startTask(StartTaskRequest request) {request = beforeClientExecution(request);}
public Set<String> getIgnoredPaths() {return new HashSet<>(getIgnoredPaths());}
public FuzzyTag(RecordInputStream in) {data = in.readRemainder();}
public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {setAction(action.toString());setResourceRecordSet(resourceRecordSet);}
public DeleteImageResult deleteImage(DeleteImageRequest request) {request = new DeleteImageRequest();for (int i = 0; i < size(); i++) {image.getAttributes().
public CreateConfigurationSetResult createConfigurationSet() {return createConfigurationSet(request);}
public Iterator<E> iterator() {Object[] backup = elements;return new FastIterator<>(backup, 0, backup.length);}
public void visitContainedRecords(RecordVisitor rv) {if (_refs.isEmpty()) {return;}rv.visitRecord(_bofRecord);for (int i = 0
public void write() { } }
public static BM25 createEmptyBM25(int bigBlockSize, boolean isXB) {final BM25 block = new BM25(bigBlockSize);if (isX
public final void tag() {    = 0;  = 1;  = 0;  = 0;  = 0;  = 0; }
public DeletePermissionResult deletePermission(String permission) {return deletePermission(permission);}
public ListDatasetGroupsResult listDatasetGroups(ListDatasetGroupsRequest request) {return listDatasetGroups(request);}
public void resume() {if (pending == null) {complete();} else {complete();}}
public String get() {return this.get();}       0;}
public String toFormulaString(String[] operands) {if(space.isSet(_options)) {return operands[0];} else if(optiIf.isSet(_options))
public void merge(T first, T second) {throw new UnsupportedOperationException();}
public String toString() {return this.message.getKey() + ": " + getLocalizedMessage();}
public XPathPath(Parser parser, String path) {this.parser = parser;this.path = path;elements = new ArrayList<>();}
public void createAccount(String accountNumber) {this.accountNumber = accountNumber;}
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {
public PushConnection openPush() {return new PushConnection(this);}
public static void strlen(char[] dst, int si, char[] src) {dst[si] = 0;for (int i = 0; i < src.length; i++)
public String key() {return key;}
public static int numNotnull(Object[] data) {int n = 0;if (data == null) return n;for (Object o : data) {if (o!= null
public void add(int location, E object) {if (location >= 0 && location <= size) {Link<E> link = voidLink;if (location < (size / 2
public DescribeDomainResult describeDomain() {return describeDomain(new DescribeDomainRequest());}
public final void flush() {flush();}
public final void run() {if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.setLength(0, length);used = true;return true;}
public final void run() {flush();}
public Edit after(int startA, int endA, int endB) {return new Edit(startA, endA, endB, startB);}
public UpdateRuleVersionResult updateRuleVersion(UpdateRuleVersionRequest request) {if (request == null) {throw new SdkClientException("Invalid argument passed to updateRuleVersion");} else if (
public ListVoiceConnectorTerminationCredentialsResult listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectorTerminationCredentials(request);}
public GetDeploymentStatusResult getDeploymentStatus() {return getDeploymentStatus(this.deploymentStatus);}
public void setNoChildReport() {if (task instanceof TaskRun) {(TaskRun) task).setNoChildReport();} else { (TaskRun) task).setNoChild
public E get(int location) {try {return a[location];} catch (IndexOutOfBoundsException e) {throw new ArrayIndexOutOfBoundsException(location);} catch (IndexOutOfBoundsException e) {throw new Array
public DescribeDataSetResult describe() {return describe(new DescribeDataSetRequest());}
public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}
public DescribeNetworkInterfacesResult describeNetworkInterfaces() {return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}
public boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= col && _firstColumn <= col && _lastColumn >= col;}
public final void run() {slop = 0;while (1) {slop = 1;} else {slop = 0;break;}}
public final PatchType getPatchType() {return new PatchType(this);}
public Iterator<E> iterator() {return delegate().iterator();}
public CreateScriptResult createScript() {return createScript();}
public BytesRef next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(termUpto
public final char[] value() {return value;}
public void associate() {this.details = new HashMap<>();for(String key : this.details.keySet()) {this.details.put(key, null);}}
public final void remove(RevCommit c) {Block b = head;if (b == null) {b = new Block();b.resetToEnd();b.add(c);
public final void customize(Map<String,String> args) {super(args);minGramSize = getInt(args, "minGramSize", LinearTokenizer.DEFAULT_MIN
public ModifyDBParameterGroupRequest(String dBParameterGroupName, java.util.List<Parameter> parameters) {setDBParameterGroupName(dBParameterGroupName);setParameters(parameters);}
public GetIpAddressResult getHostAddress() {return this.getHostAddress() == null? null : this.getHostAddress().toString();}
public void set(int index, long value) {final int o = index >>> 6;final int b = index & 63;final int shift = b << 0;blocks[o]
public RevFilter clone() {return new RevFilter(pattern);}
public String toString() {return "spans(" + term.toString() + ")" + ( doc == -1? "START" : "ENDDOC" + ( position == NO_MORE_
public boolean canAppendMatch() {for (Head head : heads) {if (head!= LastHead.INSTANCE) {return true;}}return false;}
public int lastIndexOf(String subString) {return indexOf(subString, 0);}
public DeleteAclResult deleteAcl(String bucketName) {return deleteAcl(bucketName);}
public void associate(String text) {if (text == null) {return;}map.put(text, PLACEHOLDER) -> associate(text);}
public static final int matcher(byte[] b, int ptr) {if (ptr == 0)ptr += 40; if (ptr < sz && b[ptr] == 'a')ptr
public int getLineNumber() { return row; }
public SubmoduleUpdateCommand addPath(String path) {paths.add(path);return this;}
public GetPushTemplateResult getPushTemplate(GetPushTemplateRequest request) {request = beforeClientExecution(request);return new GetPushTemplate(request);}
public DescribeVaultResult describe() {return describe(new DescribeVaultRequest());}
public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections() {return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}
public final long putLong(int index, long value) {throw new ReadOnlyBufferException();}
public RegisterDeviceResult registerDevice(RegisterDeviceRequest request) {request = beforeClientExecution(request);return registerDevice(request);}
public static Format byId(int id) {for (Format format : Format.values()) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException("
public DeleteRepoResult deleteRepo(DeleteRepoRequest request) {return deleteRepo(request);}
public GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest request) {request = beforeClientExecution(request);return executeGetBaiduChannel(request);}
public final BytesReader getBytesReader() {return fst.getBytesReader();}
public static boolean isValidSchemeChar(int index, char c) {if (c >= 'a' && c <= 'z') return true;if (c >= '0' && c
public ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {return listAppliedSchemaArns(request);}
public String displayName() {return this.displayName;}
public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length<1) {return ErrorEval.VALUE_INVALID;}boolean isA1style
public final int compareTo(int[] bs, int p) {int cmp;cmp = StringUtil.compareUnsigned(w1, bs[p]);if (cmp!= 0)return
public final void removeName(int index) {names.remove(index);} else { return ; }}
public GetQueueAttributesRequest(String queueUrl, java.util.List<String> attributeNames) {setQueueUrl(queueUrl);setAttributeNames(attributeNames);}
public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new IllegalArgumentException();}return copyOfRange(original, 0, newLength);
public static boolean setEnabled(boolean enabled) {return enabled;}
public DeleteLogPatternResult deleteLogPattern() {return deleteLogPattern(request);}
public boolean contains(char[] text, int off, int len) {return map.contains(text, off, len);}
public int getFirstSheetIndexFromExternSheetIndex(int externalSheetNumber) {return linkTable.getFirstSheetIndexForExternSheetIndex(externalSheetNumber);}
public boolean accepts(String command) {return command.length() + 1 < command.length() && command.charAt(0) =='' && command.startsWith(command);
public static void register(MergeStrategy i) {i.register(i.getName(), i);}
public long ramBytesUsed() {return BASE_RAM_BYTES_USED + ((index!=null)? index.ramBytesUsed() : 0);}
public Datacenter(String id, String name, String callerReference) {setId(id);setName(name);setCallerReference(callerReference);}
public GetFindingsResult getFindings()                                
public DescribeTopicsDetectionJobResult describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeTopicsDetectionJob(request);}
public boolean processMatch(ValueEval eval) {if (eval instanceof NumberValueEval) {final NumberValueEval tmp = (NumberValueEval) eval;if (tmp == null) {
public void write(LittleEndianOutput out) {out.writeByte(sid + getPgtClass());out.writeShort(field_1_len_subquery);}
public static void main(String[] args) throws IOException {boolean printTree = false;String path = null;for (int i=0; i<args.length; i++) {
public void writeByteValue(byte value) {if (!(fieldsData instanceof Byte)) {throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName()
public static int initialize() {return 0;}
public DoubleValuesSource(DoubleValuesSource source) {this.source = source;cache = new HashMap<>();}
public AttributeDefinition(String attributeName, NumericAttributeType attributeType) {setAttributeName(attributeName);setAttributeType(attributeType.toString());}
public static String join(String[] parts, String separator) {return new String(parts, separator, 0, count);}
public ListTaskDefinitionVariantsResult listTaskDefinitionVariants(ListTaskDefinitionVariantsRequest request) {return executeListTaskDefinitionVariants(request);}
public List<Component> listComponents() {return new ArrayList<>(iterator()).toBlocking().toArray(new Component[0]));}
public ConnectPhotosRequest() {super("CloudPhoto", "2017-07-11", "ActivatePhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public CreateMatchmakingRuleSetResult createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {return executeCreateMatchmakingRuleSet(request);}
public ListAvailableManagementCidrRangesResult listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {request = beforeClientExecution(request);return executeListAvailableManagementCidrRanges(request);}
public ObjectIdSubClassMap<ObjectId> getBaseObjectIdIds() {return (ObjectIdSubClassMap<ObjectId>) super.getBaseObjectIdIds();}
public void reset() {this.resetState();}
public CreateDomainResult create() {return new CreateDomainResult();}
public static int getEncodedSize(Object values) {int result = values.length;for (Object value : values) {result += getEncodedSize(value);}return result;}
public void        }}
public final int getInt(int index) {checkIndex(index, SizeOf.INT);return Mem.peekInt(backingArray, offset + index, order);}
public List<Head> getNextHeads(char c) {if (matches(c)) {return new Heads;}return new Heads;}
public void translate(byte[] buf) {if (buf == null) {throw new NullPointerException();}translate(buf, 0, buf.length);}
public final void writeObject(Object object) throws IOException {writeObject(object, true);}
public int offsetByCodePoint(String value, int count, int codePointOffset) {return Character.offsetByCodePoint(value, 0, count, codePointOffset);}
public static int getSingleAlt(Collection<BitSet> alts) {if (alts.size()!=1 ) return ATN.INVALID_ALT_NUMBER;for (Bit
public Date getWhen() {return new Date(when);}
public RuleTagToken(String ruleName, int excludeTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException("ruleName must not be
public void disableAccount() {super.disableAccount();}
public CreateRoomResult createRoom(Request request) {return createRoom(request);}
public ReplicationGroup deleteReplicationGroup() {return new ReplicationGroup(this);}
public final CharBuffer decode(byte[] buffer) {try {return new Decoder().onMalformedInput(EncodingError.REPLACE).decode(buffer);} catch (UnsupportedEncodingException e) {throw
public Deployment(String id, String status, String domainName) {setId(id);setStatus(status);setDomainName(domainName);}
public final void run() {output.writeByte(TC_RETURN);}
public DateWindow1904Record(RecordInputStream in) {field_1_window = in.readShort();}
public DBCellRecord delete() {return new DBCellRecord(this);}
public ParserExtension getExtension(String key) {return this.extensions.get(key);}
public void include(ResourceLoader loader) {try {if (candidateModelFile!= null) {OpenNLPOpsFactory.getCandidateModel(candidateModelFile, loader);}} catch (
public void complete() {if (progressMonitor == null) {progressMonitor.onComplete();} else {progressMonitor.onComplete();}}
public int[] getCharIntervals() {return points.clone();}
public long ramBytesUsed() {return values.ramBytesUsed()+ super.ramBytesUsed()+ Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER;
public RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {request = beforeClientExecution(request);return executeRegisterInstancesWithLoadBalancer(request);}
public DescribeClusterUserCredentialRequest() {super("CS", "2016-06-07", "DescribeClusterUserCredential", "csk");setUriPattern("/kvm/[Cluster
public PrecisionRecord(RecordInputStream in) {field_1_precedence = in.readShort();}
public void serialize(LittleEndianOutput out) {out.writeShort(getLeftRowHeight());out.writeShort(getTopColHeight());out.writeShort(getColLevelMax
public DeleteSubnetResult deleteSubnet(String subnet) {return deleteSubnet(subnet);}
public Entry getEntry(String name) throws IOException {if (!directory.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);if (entry
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[BACKUP]\n");buffer.append("   .temp = ").append(Integer.toHexString(get
public DeleteCreditCroppingResult deleteCreditCropping(Request request) {return deleteCreditCropping(request);}
public String toString() {StringBuilder sb = new StringBuilder(8);write(sb, 0, 8);return sb.toString();}
public static long generationFromSegmentsFileName(String fileName) throws IOException {if (fileName.equals(OLD_SEGMENTS_GEN)) {throw new IllegalArgumentException("\"" + OLD_SEGMENTS_
public static TagOpt fromString(String o) {if (o == null || o.length() == 0 ) return NO_FOLLOW;for (TagOpt tagopt : values()) {if
public StartContentModificationResult startContentModification(StartContentModificationRequest request) {return startContentModification(request);}
public static String escapeReplacement(String s) {StringBuilder result = new StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c =
public final void set()             
public QueryParserTokenManager(int i) {this(i, 0);return (i, 1);}
public long valueFor(double elapsed) {double val;if (multiplier == 0)val = elapsed / factor;elseval = elapsed / factor;if (type == '0')return
public final LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * Size
public void removeAllErrorListeners() {for (int i = 0; i < errors.size(); i++) {removeErrorListeners(i);}}
public CommonTokenStream(TokenSource tokenizer, int channel) {this(tokenSource, channel, 0);}, int blockNumber) {this(tokenSource, blockNumber, 0
public ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request) {return executeListObjectPolicies(request);}
public final Object toPack(AnyObjectId src, int type) {super(src);flags = type << TYPE_SHIFT;} else if (src == null) {return null;}
public final int stem(char s[], int len) {int numChars = numChars(s, len);for (int i = 0; i < numChars; i++) {
public void recover(Parser recognizer, RecognitionException e) {if (lastErrorIndex!= recognizer.getInputStream().index() && lastErrorStates.contains(recognizer.getState
public String toFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);for (int i = 0
public UnlinkFaceRequest() {super("LinkFace", "2018-07-20", "UnlinkFace");setProtocol(ProtocolType.HTTPS);setMethod(ProtocolType.POST
public ConfigOptionSetting(String namespace, String optionName, String value) {setNamespace(namespace);setOptionName(optionName);setValue(value);}
public CharSequence getFailed(CharSequence key) {StringBuilder result = new StringBuilder(tries.size() * 2);for (int i = 0; i < tries.size(); i++) {
public DescribeTargetResult describeTarget() {return describeTarget(new DescribeTargetRequest());}
public void execute() {super(new RequestBody());}
public Request(String url) {super(url);}
public RefVarPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}public RefVarPtg(int subExprLen
public static TermStats[] getHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparator) throws IOException {TermStatsQueue tq = null;
public DeleteApnsVideoChannelResult deleteApnsVideoChannel(DeleteApnsVideoChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsVideoChannel(request);}
public ListExamplesResult listExamples(Request request) {this.request = request;return new ListExamplesResult(this.request);}
public ShapeFieldCacheDistanceValueSource(ShapeContext ctx,ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {this.ctx = ctx;this.from = from
public char get(int index) {return sequence.charAt(index);}
public UpdateConfigurationProfileResult updateConfigurationProfile(UpdateConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationProfile(request);}
public DescribeLifecycleStagesResult describeLifecycleStages(DescribeLifecycleStagesRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleStages(request);}
public void start() {this.status = RUNNING;this.url = null;this.headers = null;this.body = null;this.statusCode = NO_CONTENT;}
public static PredictionContext fromRuleContext(ATN atn, RuleContext ctx) {if (ctx == null) {ctx = RuleContext.EMPTY;}if (ctx.parent
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SXVEX]\n");buffer.append("   .grbit1 =").append(HexDump.
public String toString() {return new String(this.toString());}
public ListChangesResult listChanges() {return new ListChangesResult(this);}
public final boolean allowNonFastForward() {return allowNonFastForward();}
public FtrRecord() {fstHeader = new FtrHeader();fstHeader.setRecordType(sid);}
public void translate(char[] text) {if (text == null) {throw new NullPointerException();}translate(text, 0, text.length());}
public void setQuery(CharSequence query) {this.query = new MessageImpl(QueryParserMessages.INVALID_SYNTAX, query, "");}
public final void run() {  d = 0; d = 1; d = 0; d = 0; d = 0; d = 0; d = 0; d = 0;
public Set<String> nameSet() {return Collections.unmodifiableSet(map.values());}
public static int getEffectivePort(String scheme, int defaultPort) {if (defaultPort!= -1) {return defaultPort;}if ("http".equalsIgnoreCase(scheme)) {return
public ListAssessmentTemplatesResult listAssessmentTemplates(Request request) {request = beforeClientExecution(request);return new ListAssessmentTemplates(request);} catch (IllegalArgumentException e) {throw new IllegalArgumentException(e
public Cluster restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreFromClusterSnapshot(request);}
public void addShape(HSSFShape shape) {shape.setPath(getPath());shape.setShape(getShape());}
public boolean equals(Object o) {if (this == o) {return true;}if (o == null || getClass()!= o.getClass()) {return false;}Facet
public static final int prev(byte[] b, int ptr, char chrA) {if (ptr >= 0) {if (b[ptr--] == chrA)return
public boolean isDeltaRepresentation() {return deltaBase!= null;}}                       
public Token emitEOF() {int cpos = getCharPositionInLine();int line = getLine();Token eof = _factory.create(_tokenFactorySourcePair, Token.EOF, null,
public void updateUserRequest()                                 
public final RevFilter negate() {return new RevFilter(this);}
public void setTagger(PersonIdent taggerIdent) {this.tagger = taggerIdent;this.elem = elem;this.elem2 = elem2;this.elem3 =
public static BufferSize memory() {final long max = System.maxMemory();final long free = System.freeMemory();final long availableBytes = max - free + availableBytes;final long
public static int trimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (ptr >= 0 && isWhitespace(raw[ptr]) ) {
public TopMarginRecord(RecordInputStream in) {field_1_margin = in.readDouble();}
public GetEnvironmentInfoRequest(String infoType) {if (infoType == null) {throw new NullPointerException("infoType must not be null");}if (infoType == null) {
public CreateSessionResult createSession() {return createSession(false);}
public CreateBridgeSessionResult createBridgeSession(CreateBridgeSessionRequest request) {return executeCreateBridgeSession(request);}
public int getType() {return this.type;}
public String getContentDisposition() {return contentDisposition;}
public void characters(char[] ch, int start, int length) {characters.append(ch, start, length);}
public FetchAlbumTagPhotosRequest() {super("CloudPhoto", "2017-07-11", "FetchAlbumPhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);
public DeleteMembersResult deleteMembers() {return new DeleteMembersResult();}
public void getContactStatus() {this.statusCode = 200;this.statusCode = 2020; this.statusCode = 2020; this.statusCode = 2020; this.statusCode = 202
public boolean remove(Object o) {return this.remove(o)!= null;}
public E last() {return backingMap.lastKey();}
public CreateStreamingDistributionResult createStreamingDistribution(CreateStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeCreateStreamingDistribution(request);}
public boolean isAbsolute() {return true;}
public void disable() {super.disable();}
public DescribeResult describe() {return describe(this);}
public void next(int delta) {while (delta >= 0) {if (currentSubtree!= null)ptr += currentSubtree.getEntrySpan();elps++;if (
public final RevFilter clone() {return new RevFilter(a.clone(), b.clone());}
public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public String displayName() {return this.displayName;}
public String toString() {StringBuilder sb = new StringBuilder("[");for (Object item : this) {if (sb.length() > 1) sb.append(", ");if (
public DescribeScalingChannelResult describeScalingChannel(DescribeScalingChannelRequest request) {return describeScalingChannel(request);}
public void attach(String path) {this.path = path;}
public String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new
public TreeFilteringPostingsFormat( TreeFilteringPostingsFormat lazyPostingsFormat, TreeFilterFactory lazyPostingsFormat) {super(TreeFilteringPostingsFormat.class);this.lazy
public ListTemplatesResult listTemplates() {return new ArrayList<>();}
public TimerThread(long interval, Counter counter) {this.interval = interval;this.count = 0;}}
public DrawRecord() {recordData = EMPTY_BYTE_ARRAY;} else {recordData = EMPTY_BYTE_ARRAY;}return recordData;}
public List<String> list() {return new ArrayList<>();}
public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {
public GroupingSearch disableCache() {this.maxCacheRamMB = null;this.maxDocsToCache = null;return this;}
public static int idealByteArraySize(int need) {for (int i = 0; i < 32; i++)if (need <= (1 << i) - 12)return (1
public UpdateResult update() {return executeUpdate(new UpdateRequest());}
public UpdatePlanResult updatePlan() {return executePlan(new UpdatePlanRequest());}
public static Cell merge(Cell m, Cell e) {if (m.cmd == e.cmd && m.ref == e.ref && e.skip == e.skip) {
public final ByteBuffer read(int length, long position) throws IOException {if (position >= size) {throw new IndexOutOfBoundsException("Position " + position + " > " + size);}final ByteBuffer
public void respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {request = beforeClientExecution(request);respondActivityTaskCompleted(request);}
public final void incrementProgressBy(int delta) {setProgress(progress + delta);}
public final MetadataDiff compareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid())return MetadataDiff.EQUAL;if (entry.isUpdateRequired())return MetadataDiff.
public static NumberRecord convertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.setColumn(k.getColumn());num.setRow(k.
public final CharBuffer put(char[] src, int charCount) {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);
public int getCells() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext(); ) {Character c = i.
public BenishMorseFilterFactory(Map<String,String> args) {super(args);NameType nameType = NameType.valueOf(get(args, "name
public static double ppp(double v) {double r = Double.NaN;if (v!=null && v.length > 1) {r = ppsqrt(v) /
public WikiNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public final WeightedTerm[] getTerms(Query query, boolean excluded, String fieldName) {final WeightedTerm[] terms = new WeightedTerm[1];Predicate<String> operator =
public DeleteDocumentationResult deleteDocumentation(String docId) {return deleteDocumentation(docId);}
public String toString(){StringBuilder sb = new StringBuilder();sb.append("[CHART]\n");sb.append("   .x    = ").append(getX()).append
public short get(int index) {checkIndex(index);return backingArray[offset + index];}
public String toString() {return this.toString();}
public final ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluate
public void clear() {ratingBySpanQuery.clear();}
public int findEndOffset(String buffer, int start) {if ( start > buffer.length() || start < 0 ) return start;for (int i = 0; i < buffer
final public SrndQuery PrimaryQuery() throws ParseException {SrndQuery q;switch ((jj_ntk!=-1)?jj_ntk():jj_
public DeleteAccountResult deleteAccount(String accountNumber) {return deleteAccount(accountNumber);}
public InsertTagsRequest() {super("Ots", "2016-06-20", "InsertTags", "ots");setMethod(MethodType.POST);}
public void deleteUser(String userId) {this.userId = userId;}
public DescribeNetworkInterfacesResult describeNetworkInterfaces() {return describeNetworkInterfaces(request);}
public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data,
public CreateConfigurationResult createConfiguration(CreateConfigurationRequest request) {this.request = request;return new CreateConfigurationResult(request);}
public DescribeClientVpnConnectionsResult describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {return describeClientVpnConnections(request);}
public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}
public final void write () { }
public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -2;freq = 0;return this;}
public boolean hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}
public UpdateAccountResult update() {return doUpdate(new UpdateAccountRequest());}
public final Token LT(int k) {lazyInit();if ( k < 0 ) return null;if ( k >= 0 ) return LT(k);if ( i >= tokens.size
public void removeSheet(int sheetIndex) {if (boundsheaders.size() > sheetIndex) {records.remove(records.getHdrpos() - (boundsheaders.size()
public void removeName(String name) {Integer index = getNameIndex(name);removeName(index);}
public boolean equals(final Object o) {if (!(o instanceof Property)) {return false;}final Property p = (Property) o;final Object pValue = p.getValue();
public GetRepoBuildListRequest() {super("cr", "2016-06-07", "GetRepoBuildList", "cr");setUriPattern("/repos/[RepoNamespace]/
public MessageWriter() {buf = new ByteArrayOutputStream();buf = new ByteArrayOutputStream();buf.setEncoding(UTF_8);}
public final void write() {flush();}
public void close() throws IOException {if (read(skipBuffer())!= -1 || expectedSize!= expectedSize) {throw new corruptObjectException(MessageFormat.format(JGitText
public DescribeModelResult describe() {return describe(new DescribeModelRequest());}
public void serialize(CellValueRecordInterface rec, RecordStream rs, SharedValueManager svh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRe = (FormulaRecord) rec;
public DecompressDecoder clone() {return new DecompressDecoder(this, new DecoderConfig(), new EncoderOptions());}
public UpdateS3ObjectResult updateS3Object() {return updateS3Object(this);}
public GroupQueryNode(QueryNode query) throws QueryNodeException {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_
public CharSequence toString() {final StringBuilder path = new StringBuilder();path.append("/").append(getFirstPathElement());for (QueryElement p : getPathElements()) {path.append(
public void removeCellComment() {return _sheet.findCellComment(_record.getRow(), _record.getColumn());}
public void reset() {attempt = -1;exiting = -1;}
public UserSViewBegin() {return new UserSViewBegin();}
public void run() {while (true) {switch (currentState()) {case SET:break;case UNSET:break;case UNSPECIFIED:break;default:break;}}
public ModifySnapshotCopyRetentionIntervalResult modifySnapshotCopyRetentionInterval(ModifySnapshotCopyRetentionIntervalRequest request) {request = beforeClientExecution(request);return executeModifySnapshotCopyRetentionInterval(request);}
public DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSubnetGroup(request);}
public static String decode(byte[] buffer) {return new String(buffer, 0, buffer.length);}
public int getDefaultPort() {return -1;}
public StopTaskResult stopTask(StopTaskRequest request) {return stopTask(request);}
public void seekExact(BytesRef target, TermState otherState) {assert otherState!= null && otherState instanceof BlockTermState;state.copyFrom(otherState);seekPending =
public SeriesToChartGroupRecord(RecordInputStream in) {field_1_chartGroupIndex = in.readShort();}
public final void translateUnicodeStringFlagAndData(LittleEndianOutput out, String value) {if (is16Bit) {out.writeByte(is16Bit? 0x01 :
public AuthorizeSecurityGroupIngressResult authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {return authorizeSecurityGroupIngress(request);}
public void addFile(String path) {checkFileNames(Paths.singleton(path));for (String segment : files) {checkFileNames(Paths.singleton(segment));for (String
public void setSize(int width, int height) {mWidth = width;mHeight = height;}
public void setPrecedenceFilter(boolean value) {if (value) {this.precedenceFilter = new PrecedenceFilter(value);} else {this.precedenceFilter = new
public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}
public void serialize(LittleEndianOutput out) {out.writeShort(getOptionFlags());out.writeShort(getRowHeight());}
public Builder(boolean duplicate) {if (duplicate) {this.duplicate = duplicate;} else {this.duplicate = false;} }
public int size(int capacity, float loadFactor) {this(capacity, loadFactor);if (loadFactor <= 0) {throw new IllegalArgumentException("Load factor: " + loadFactor);
public Long get(CharSequence key) {Long bucket = singleExecution.getBucket(key);return bucket == null? null : Long.valueOf(bucket);}
public ListHyperparameterTrainingJobsResult listHyperparameterTrainingJobs(ListHyperparameterTrainingJobsRequest request) {request = beforeClientExecution(request);return executeListHyperparameterTrainingJobs(request);}
public DeleteTableResult deleteTable(String tableName) {return deleteTable(new DeleteTableRequest().withTableName(tableName));}
public boolean lessThan(TextFragment fragA, TextFragment fragB) {if (fragA.getScore() == fragB.getScore())return fragA.getScore() <
public void freeBefore(int pos) {assert pos >= nextPos;final int newCount = nextPos - pos;final int newCount = newCount + " count=" + count;
public UpdateHITTypeOfHITResult updateHITTypeOfHIT(Request request) {this.request = request;this.response = new UpdateHITTypeOfHIT(request, this.response
public UpdateRecommenderConfigurationResult updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateRecommenderConfiguration(request);}
public int compareTo(BytesRef other) {return Arrays.compareUnsigned(this.bytes, this.offset, this.length, other.bytes, this.offset + this.length);
public int stem(char s[], int len) {if (len > 4 && s[len-1] =='s')len--;if (len > 5 && (ends
public DescribeDBMSRequest describeDBMSRequest() {return new DescribeDBMSRequest(this);}
public SortedSetDocValuesFacetField(String dim, String label) {super("dummy", dim);FacetField.validateLabel(label);FacetField.validateLabel(dim);this.
public CreateDocumentationResult createDocumentation(CreateDocumentationRequest request) {this.request = request;return new CreateDocumentationResult(request);}
public String getValue() {return this.value;}
public void copy() {CopyOnWriteArrayList.this.copy();}
public UpdateDataSourcePermissionsResult updateDataSourcePermissions(Request request) {return executeUpdateDataSourcePermissions(request);}
public static Record createSingleRecord(RecordInputStream in) {I_RecordFactory factory = _recordFactoriesById.get(Integer.valueOf(in.getSid()));if (factory
public int getCount() {return mTabs.size();}
public DeleteApplicationReferenceDataSourceResult deleteApplicationReferenceDataSource(Request request) {return deleteApplicationReferenceDataSource(request);}
public CreateProjectVersionResult createProjectVersion(CreateProjectVersionRequest request) {return executeCreateProjectVersion(request);}
public final IntBuffer slice() {return new ReadOnlyIntArrayBuffer(remaining(), offset + position);}
public byte get() {if (position == limit) {throw new BufferUnderflowException();}return block.get(offset++);}
public final LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}
public StoredField(String name, double value) {this(name, Double.valueOf(value));}
public IntervalSet getExpectedTokensWithinCurrentRule() {ATN atn = getInterpreter().getATN();ATNState s = atn.states.get(getState());return
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[UPLOADING]\n");buffer.append("   .readonly = ").append(getReadOnly()==1?"
public SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<>();}
public void include(String name, AnyObjectId id) {boolean isValidRefName = Repository.isValidRefName(name) || Constants.HEAD.equals(name);if (!isValidRef
public EnableSnapshotCopyResult enableSnapshotCopy(EnableSnapshotCopyRequest request) {return executeEnableSnapshotCopy(request);}
public ValueFormatter getValueFormatter() {return new ValueFormatter(this);}
public void serialize(LittleEndianOutput out) {out.writeByte(getActiveCellRow());out.writeShort(getActiveCellCol());out.writeShort(getActiveCellRef
public static Counter newCounter() {return newCounter(false);}
public boolean get(String name, boolean dft) {boolean vals[] = valByRound.get(name);if (vals!= null) {return vals[roundNumber % vals.
public void serialize() {if (records.getTabs().size() > 0) {TabsTabs.add(records.getTabs().get(0));} else {TabsTabs.add
public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {super(delegate.getReuseStrategy());this.delegate = delegate;this.maxTokenCount
public ExternalBookBlock(int numberOfCells) {_externalBookRecord = ExternalBookRecord.createInternalReferences((short) numberOfCells);_externalNameBlocks = new ExternalNameBlock[0
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SCSAPIPROTECT]\n");buffer.append("   .options = ").append(getOptions
public PushCommand setShallow(boolean small) {checkCallable();if (small) {this.shallow = small;return this;} else {this.shallow = false;
public int compareTo(SorterManager other) {return Double.compare(other.recordTimeSec, recordTimeSec);}
public final void end() { return ; }
public BlockList() {directory = BlockList.<T> newDirectory(8);directory[0] = BlockList.<T> newBlock();tailBlock = directory[0];}
public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<>();for (int i = 0; i < weightedTerms.
public boolean equals(Object other) {if (other instanceof MergedGroup) {return this == other;} else {return false;}}}
public String displayName() {return this.displayName;}
public DescribeExamplesResult describe() {return describe(new DescribeExamplesRequest());}
public EscherDraw(EscherShape escherGroup, Color foreground, float verticalPointsPerPixel ){this.escherGroup = escherGroup;this.workbook = workbook;
public String metricFilter() {return this.metricFilter;}
public DeleteRouteTableResult deleteRouteTable(Request request) {return deleteRouteTable(request);}
public AssociateVPCToVPC (AssociateVPCToVPCRequest request) {request = beforeClientExecution(request);return executeAssociateVPCToVPC(request);}
public PutIntegrationResult putIntegration() {return executePutIntegration(new PutIntegrationRequest());}
public SimpleEntry(K key, V value) {this.key = key;this.value = value;}
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {
public DescribeConnectionFromLagResult describeConnectionFromLag(DescribeConnectionFromLagRequest request) {request = beforeClientExecution(request);return executeDescribeConnectionFromLag(request);}
public FileMode getOldMode() {return oldMode;}
public String toString() {return String.valueOf(this);}
public StopKeyPhrasesDetectionJobResult stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopKeyPhrasesDetectionJob(request);}
public String toString() {return "[Array Formula Or Shared Formula]\n" +"row = " + getRow() + "\n" +"col = " + getColumn() + "\n";
public ListHumanLanguageDetectionJobsResult listHumanLanguageDetectionJobs(ListHumanLanguageDetectionJobRequest request) {request = beforeClientExecution(request);return executeListHumanLanguageDetectionJobs(request);}
public String toString() {return "slice start=" + start + " length=" + length + " readerIndex=" + readerIndex;}
public static int parseHexInt4(final byte digit) {final int r = digits16[digit];if (r < 0)throw new ArrayIndexOutOfBoundsException();return r;}
public final void write () { }
public DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request) {return describeStackSetOperation(request);}
public HSSFCell getCell(int cellnum, Sheet sheet) {return getCell(cellnum, sheet.getMissingCellPolicy());}
public final void write(byte[] b) {writeContinueIfRequired(b.length);for (int i = 0; i < b.length; i++) {write(b,
public ResetImageAttributeValueRequest(String imageId, ResetImageAttributeValue attribute) {setImageId(imageId);setAttribute(attribute.toString());}
public void dropResultContents() {if (resultContents == null) {resultContents = null;}return resultContents;}
public ObjectId getPeeledObjectId() {return getParent().getPeeledObjectId();}
public void unexport(Request request) {this.request = request;}
public final void write(LittleEndianOutput out) {out.writeByte(sid + getPgClass());out.writeByte(field_3_string.length());out.writeByte
public DeleteQueueResult deleteQueue(String queueUrl) {return deleteQueue(new DeleteQueueRequest().withQueueUrl(queueUrl));}
public void setCheckEofAfterPackFooter(boolean b) {checkEofAfterPackFooter = b;}
public void swap() {final int sBegin = startA;final int sEnd = endA;beginA = startB;endB = endB;beginB = startB;
public int getPackedGitWindowSize() {return packedGitWindowSize;}
public void putMetricData(PutMetricData request) {if (request == null) {throw new SdkClientException("Invalid argument passed to putMetricData");} else if (request.getAttributes
public void get(double d) {if (d == 0) {return;} else if (d == 0) {return;}}
public CreateQueueRequest(String queueName) {setQueueName(queueName);}
public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference araf) {super(araf);this.externalWorkbookNumber = externalWorkbookNumber
public void setBaseline(long interval) {this.interval = interval;}= 0;for (int i = 0; i < interval; i++) {this.interval = i
public void translate(String text) {if (text == null) {return;}translate(text, 0, text.length());}
public String toString() {String coll = collectionModel.getName();if (coll!= null) {return String.format(Locale.ROOT, "LM %s", getName());} else {
public DescribeInstancesResult describeInstances() {return describeInstances(ArrayUtil.copyOfSubArray(instances, 0, numInstances),ArrayUtil.copyOfSubArray(boosts, 0
public AreaEval offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {if (_refEval
public final ShortBuffer put(short[] src, int srcOffset, int byteCount) {byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.
public BlendedTermQuery() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray(
public void write(int oneByte) throws IOException {out.write(oneByte);written++;}
public DescribeImportImageTasksResult describeImportImageTasks(DescribeImportImageTasksRequest request) {return describeImportImageTasks(request);}
public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.readUShort();_lastCol = in.readUShort();_colWidth = in.readUShort
public Status(IndexDiff diff) {this.diff = diff;hasUncommittedChanges =!diff.getAdded().isEmpty() ||!diff.getDeleted().isEmpty()
public CreateExperimentResult createExperiment(CreateExperimentRequest request) {return createExperiment(request);}
public BlendedTermQuery clone() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public final FloatBuffer slice() {byteBuffer.limit(limit * SizeOf.Float);byteBuffer.position(position * SizeOf.Float);FloatBuffer result = new FloatToByte
public DescribeSnapshotRunsResult describeSnapshotRuns(DescribeSnapshotRunsRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotRuns(request);}
public ListImagesResult listImages(ListImagesRequest request) {request = beforeClientExecution(request);return new ListImages(request);} catch (IllegalArgumentException e) {throw new IllegalArgumentException(e);
public Diff(int in, int del, int rep, int noop) {INSERT = in;DELETE = del;REPLACE = rep;NOOP = noop;}=
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append("");buffer.append(operands[
public static void setupEnvironment(String[] workbookNames, ExecutedEvaluator[] evaluators) {WorkbookEvaluator[] wbElems = new WorkbookEvaluator[evaluators.length];for (int
public ListPhotoTagsRequest() {super("CloudPhoto", "2017-07-11", "ListPhotoTags", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new Random(seed);this.processed
public void allocate(int size) {if (size == 0) {return;}allocate(size);}
public FttRecord(RecordInputStream in) {frHeader = new FttHeader(in);ifs_sharedFeatureType = in.readShort();reserved1 = in.readByte();
public RevCommit tryFastForward(RevCommit newCommit) throws IOException {Ref head = getHead();ObjectId headId = head.getObjectId();if (headId == null)throw new
public Snapshot createSnapshot() {return createSnapshot(request);}
public Record getNext() {if (!hasNext()) {throw new RuntimeException("Trying to read past end of record stream");}_countRead ++;return _list.get(_nextIndex++
public String toString() {return new String(buf, 0, buf.length);}
public ListTablesRequest(String tableName) {this(tableName, Long.valueOf(tableName));}
public void run() {a = 0;a = 1;a = 0;a = 1;a = 0;a = 1;a = 0;a = 0;a.
public BlendedTermQuery() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray(
public boolean equals(Object obj) {if (obj instanceof State) {return equals((State) obj);}State other = (State) obj;return equals(this.labels, other
public static TokenStream create(TokenStream input) {return new EnglishProbabilityFilter(input);}
public void clearFormatting() {_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}
public int get(int index, long[] arr, int off, int len) {assert len > 0 : "len must be > 0 (get " + len + ")";final int
public void clear() {size = 0;for(int i=0; i<size; i++) {if (i > 0) {size += 1;}}
public String toString() {return new String(true, false);}
public void createVerifiedDomainUrl(Request request) {super(request);}
public void write(int oneChar) {out.write(new char[] { (char) oneChar }, 0, 1);}
public final void reset()     move()   move()
public String toString() {return "term=" + term + ", field=" + field + ",value=" + valueToString() + ",docID = " + docID + ",creationTime="
public boolean isSatisfied(FilteredBitSet binaryFilter, FieldInfo fieldInfo) {return binaryFilter.getAverage(0.95f);}
public Builder(boolean ignoreCase) {this.ignoreCase = ignoreCase;} else {this.ignoreCase = false;}return this;}
public String toString() {return getClass().getSimpleName()+ "(maxBasicQueries: " + maxBasicQueries+ ", queriesCreated: " + queriesCreated+ ", maxMultiQueries: "
public void clear() {size = 0;for (int i = 0; i < size; i++) {if (i == 0) {size = 0;break;}if (
public void reset()          0= 0;  0 = 0;  0 = 0;  0 = 0;  0 = 0;  0
public void run() {if (currentPutField == null) {currentPutField = null;} else {currentPutField = currentPutField;}}
public CreateTagsResult createTags() {return createTags(request);}
public final void poll() {          
public InputStream openStream(String resource) throws IOException {InputStream stream = (clazz!= null)? clazz.getResourceAsInputStream(resource) : loader.getResourceAsInputStream(resource);
public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getSimpleName()).append(" [");sb.append(" size=").append(data
public int nextIndex() {return index++;}
public CharSequence toString() {if (isDefaultField(this.field)) {return new StringBuilder();} else {return this.field + ":" + getTermEncodeEncoded(this.field) +
public BlendedTermQuery clone() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public boolean isOutput() {return true;}
public CreateNetworkInterfaceResult createNetworkInterface() {return createNetworkInterface().toBlocking().count() > 0) {return createNetworkInterface().toBlocking().count() > 0;}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_password);}
public StopTaggedLanguageAnalysisJobResult stopTaggedLanguageAnalysisJob(StopTaggedLanguageAnalysisJobRequest request) {request = beforeClientExecution(request);return executeStopTaggedLanguageAnalysisJob(request);}
public ECSMetadataServiceCredentialsProvider withConnectionTimeout(int milliseconds) {this.connectionTimeout = (int) (0, 0);} else {this.connectionTimeout = (int)
public GetGatewayAccountResult getGatewayAccount() {return this.getGatewayAccount();}
public final FloatBuffer slice() {return new ReadOnlyFloatArrayBuffer(remaining(), offset + position);}
public static String join(Collection<String> parts, String separator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String
public String toString() {return "(" + a.toString() + " AND " + b.toString() + ")";}
public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {setTopicArn(topicArn);setNextToken(nextToken);}
public byte readByte() {return bytes;}
public DeleteClientVpnConnectionsResult deleteClientVpnConnections(DeleteClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeDeleteClientVpnConnections(request);}
public void run() {while ( true ) {if ( false ) {break } } }
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_categorySpace);out.writeShort(field_2_categorySpace);out.writeShort(
public Object common(Object output1, Object output2) {return outputs.common((T) output1, (T) output2);}
public CreateVariableResult createVariable(CreateVariableRequest request) {return executeCreateVariable(request);}
public static int match(byte[] b, int ptr, byte[] src) {if (ptr + src.length > b.length)return -1;for (int i = 0
public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;
public CreateCloudFrontOriginAccessIdentityResult createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeCreateCloudFrontOriginAccessIdentity(
public boolean isNamespaceAware() {return getFeature (XmlPullParser.FEATURE_PROCESS_NAMESPACES);}
public final void                }
public String displayName() {return this.displayName;}
public DirectoryReader getIndexReader() {if (indexReader!= null) {indexReader.incRef();}return indexReader;}
public int indexOfKey(int key) {return binarySearch(mKeys, 0, mSize, key);}
public EmptyRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_col = in
public long length() {return this.length;}
public PasswordRecord(InputStream in) {field_1_password = in.readShort();}                   
public void run() {drain();}                              
public void run() throws IOException {long lastReconnectStartNS = System.nanoTime();while (!terminate) {try {reopenLock.lock();try {boolean hasWaiting =
public void deleteUser() {this.user = null;}
public E peekFirst() {return (size == 0)? null : removeFirstImpl();}
public CreatePhotoRequest() {super("CloudPhoto", "2017-07-11", "CreatePhoto", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public String getName() {return this.name;}
public final int findEndOffset(StringBuilder buffer, int start) {if (start > buffer.length() || start < 0 ) return start;for (int offset = start; offset <
public void setObjectChecker(ObjectChecker o) {this.objCheck = o;}) {this.objCheck = o;}
public BRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = a
public CreateVpcEndpointResult createVpcEndpoint(CreateVpcEndpointRequest request) {return executeCreateVpcEndpoint(request);}
public DeregisterWorkspaceDirectoryResult deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeDeregisterWorkspaceDirectory(request);}
public CCRTInfoRecord(RecordInputStream in) {crt = in.readShort();grbitFrt = in.readShort();verWriter = in.readByte();int
public Merger newMerger(Repository db) {return new OneWay(db, treeIndex);}
public CreateDataSourceFromRedshiftResult createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {request = beforeClientExecution(request);return executeCreateDataSourceFromRedshift(request);}
public void clearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(
public void removeName(String name) {Integer index = getNameIndex(name);removeName(index);}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[RightMargin]");buffer.append(" ").append(getWidth() ).append("\n" );buffer
public BlendedTermQuery clone() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray
public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);add(new MultiFieldQueryNodeProcessor());add(new FuzzyQueryNodeProcessor());add(
public String formatAsString(String sheetName, boolean useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName!= null) {sb.append(SheetNameFormatter.format(
public final ByteBuffer put(int index, byte value) {throw new ReadOnlyBufferException();}
public final void move() {return move();}
public final ShortBuffer slice() {return new ReadWriteShortArrayBuffer(remaining(), offset);}
public void set(int index, long n) {if (count < 0)throw new ArrayIndexOutOfBoundsException(index);else if (count == 0)add(n);elses[index
public void put(byte[] buf) {if (buf == null) {throw new NullPointerException();}put(buf, 0, buf.length);}
public static double max(double[] values) {double max = Double.MAX_VALUE;for (double value : values) {max = Math.max(max, value);}return
public UpdateRepoWebhookRequest() {super("cr", "2016-06-07", "UpdateRepoWebhook", "cr");setUriPattern("/repos/[RepoNamespace]/[Repo
public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {setDomainName(domainName);setItemName(itemName);set
public String toString() {StringBuilder sb = new StringBuilder();sb.append("[SXP]\n");for (int i = 0; i < _fieldInfos.length; i++)
public boolean isSuccess() {if (mergeResult!= null) return mergeResult.isSucceeded();else if (rebaseResult!= null) return rebaseResult.getStatus().isSucceeded();
public void writeBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}
public DescribeConnectionsResult describeConnections() {return describeConnections(true);}
public DeletePhotosRequest() {super("CloudPhoto", "2017-07-11", "DeletePhotos", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
public boolean add(E object) {if (iterator == null) {throw new NullPointerException();}iterator.add(object);return true;}
public final void run() {switch (size()) {case 0: return; case 1: return; case 0: return ; } }
public void getSubQuery(int qn) {return queries.get(qn);} else { return qn;}}
public final float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float totalScore) {int result = (int) Math.min(
public String toString() {StringBuilder sb = new StringBuilder();sb.append("[blank]\n");sb.append("    row= ").append(HexDump.shortToHex(get
public DescribeLogResult describe() {return describe(new DescribeLogRequest());}
public String status() {return this.status() == null? "" : this.status().toString();}
public GetPhoneNumberResult toString() {return new GetPhoneNumberResult(this);}
public String displayName() {return this.displayName;}
public boolean isDirect() {return true;}
public DeleteServerCertificateRequest(String clientCertificateName) {this.clientCertificateName = clientCertificateName;this.clientCertificate = null;}
public final String append(double d) {return this.append(d);}
public GetEvaluationResult getEvaluation(Request request) {return getEvaluation(request);}
public final void end() { return end; }
public boolean find(int start) {int pos = start;if (pos < limitStart) {pos = limitStart;} else if (pos >= limitEnd) {pos = limit
public GetLifecyclePolicyPreviewResult getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {request = beforeClientExecution(request);return executeGetLifecyclePolicyPreview(request);}
public SimplePositionTokenStream(String word) {attrib = new CharacterAttribute(Character.class);posIncr = new CharacterAttribute(Character.class);this.word = word;return
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_print_rowlines);}
public String toString() {final StringBuilder s = new StringBuilder();s.append(Constants.typeString(getClass()));s.append(' ');s.append(commitTime());s
public LsRemoteCommand setRemote(String remote) {checkCallable();this.remote = remote;}
public void collapseRow(int rowIndex) {RowRecord rowRecord = getRow(startRow);int nextRowIx = writeBlank(rowRecord, startRow);RowRecord row = getRow
public void associate() {this.associatedObject = null;}
public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("[SERIESLIST]\n");buffer.append("   .values= ").append(Arrays.toString(get
public QueryConfig build() {return new QueryConfig(this);}
public final String getClassArg() {if (null!= originalArgs) {return originalArgs.getClass().getName();}return getClass().getSimpleName();}
