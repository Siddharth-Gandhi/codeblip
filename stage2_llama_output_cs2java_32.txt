First element of train dataset: {'source_code': 'public virtual ListSpeechSynthesisTasksResponse ListSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListSpeechSynthesisTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListSpeechSynthesisTasksResponseUnmarshaller.Instance;return Invoke<ListSpeechSynthesisTasksResponse>(request, options);}', 'target_code': 'public ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request) {request = beforeClientExecution(request);return executeListSpeechSynthesisTasks(request);}'}
Train dataset size: 10300
Valid dataset size: 500
Number of trainable parameters: 102415360
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['package\\\\;\\\\ of\\\\ of\\\\ of\\\\ of\\\\ of\\\\ of\\\\ of\\\\ of\\\\ of\\\\ ofs/0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0;0.0000s.0000s.0000s000s000s000s000s00s00s00s00s00s00s00s00s00s00s00s00s00s00s00s0s00s00s00s00s00s00s00s00s0s00s00s00s00s00s00s00s0s00s00s0s00s0s00s0s00s0s00s0s00s0s00s0s00s0s0s0s00s0s00s0s00s0s0s0s00s0s0s0s00s0s0s0s0s00s0s0s0s0s0s0s0s0s0s0']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ["package,с,с,с.uminate, of that would, it's, it's that's it's that's it's it's that's it's that's it's that's it's that's it's that's it's.s's that's it's.s's it's.s's it's.s's it's.s's.s's's.s's.s's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's's"]

Starting training for 10 epochs from cs to java with prompt: 
Epoch 1: Train Loss: {'loss': 1.093425663478166}
Epoch 1: Validation Loss: {'loss': 0.8093055725097656}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public String getBranch() {return branch;}\n    public String getBranch() {return branch;}\n\n    public void setBranch(String branch) {this.branch = branch;}\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n\n        BranchInfo that = (BranchInfo) o;\n\n        if (branch != null ? !branch.equals(that.branch) : that.branch != null) {\n            return false;\n        }\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        return branch != null ? branch.hashCode() : ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public int size() {return size;}\n    public boolean isEmpty() {return size==0;}\n    public boolean contains(Object o) {throw new UnsupportedOperationException();}\n    public Iterator<E> iterator() {throw new UnsupportedOperationException();}\n    public Object[] toArray() {throw new UnsupportedOperationException();}\n    public <T> T[] toArray(T[] a) {throw new UnsupportedOperationException();}\n    public boolean add(E e) {throw new UnsupportedOperationException();}\n    public boolean remove(Object o) {throw new UnsupportedOperationException();}\n    public boolean containsAll(Collection<?> c) {throw new UnsupportedOperationException();}\n    public boolean addAll(Collection<? extends E> c) {throw new UnsupportedOperationException();}\n    public boolean addAll(int index, Collection<? extends E> c) {throw new UnsupportedOperationException();}\n    public boolean removeAll(Collection<?> c) {throw new UnsupportedOperationException();}\n    public boolean retainAll(Collection<?> c) {throw new UnsupportedOperationException();}\n    public void clear() {throw new UnsupportedOperationException();}\n    public boolean equals(Object o) {throw new UnsupportedOperationException();}\n    public int hashCode() {throw new UnsupportedOperationException();}\n    public E get(int index) {throw new UnsupportedOperationException();}\n    public E set(int index, E element) {throw new UnsupportedOperationException();}\n    public void add(int index, E element) {throw new UnsupportedOperationException();}\n    public E remove(int index) {throw new UnsupportedOperationException();}\n    public int indexOf(Object o) {throw new UnsupportedOperationException();}\n    public int lastIndexOf(Object o) {throw new UnsupportedOperationException();}\n    public ListIterator<E> listIterator() {throw new UnsupportedOperationException();}\n    public ListIterator<E> listIterator(int index) {throw new UnsupportedOperationException();}\n    public List<E> subList(int fromIndex, int toIndex) {throw new UnsupportedOperationException();}\n ']

New best validation loss: 0.8093055725097656
Epoch 2: Train Loss: {'loss': 0.8205842545020927}
Epoch 2: Validation Loss: {'loss': 0.7420347847938538}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewId() {return newId;}\n    public void setNewId(ObjectId newId) {this.newId = newId;}\n    public ObjectId getOldId() {return oldId;}\n    public void setOldId(ObjectId oldId) {this.oldId = oldId;}\n    public String getRefName() {return refName;}\n    public void setRefName(String refName) {this.refName = refName;}\n    public boolean isForceUpdate() {return forceUpdate;}\n    public void setForceUpdate(boolean forceUpdate) {this.forceUpdate = forceUpdate;}\n    public boolean isAllowNonFastForwards() {return allowNonFastForwards;}\n    public void setAllowNonFastForwards(boolean allowNonFastForwards) {\n      this.allowNonFastForwards = allowNonFastForwards;\n    }\n    public boolean isDryRun() {return dryRun;}\n    public void setDryRun(boolean dryRun) {this.dryRun = dryRun;}\n    public boolean isSkipHooks() {return skipHooks;}\n    public void setSkipHooks(boolean skipHooks) {this.skipHooks = skipHooks;}\n\n    @Override\n    public boolean equals(Object o) {\n      if (this == o) {\n        return true;\n      }\n      if (o == null || getClass() != o.getClass()) {\n        return false;\n      }\n      RefUpdateRequest that = (RefUpdateRequest) o;\n      return forceUpdate == that.forceUpdate\n          && allowNonFastForwards == that.allowNonFastForwards\n          && dryRun == that.dryRun\n          && skipHooks == that.skipHooks\n          && Objects.equals(newId, that.newId)\n          && Objects.equals(oldId, that.oldId)\n          && Objects.equals(refName, that.refName);\n    }\n\n    @Override\n    public int hashCode() {\n      return Objects.hash(newId, oldId, refName, forceUpdate, allowNonFastForwards, dryRun, skipHooks);\n    }\n\n    @Override\n    public String toString() {\n      return MoreObjects.toStringHelper(this)\n          .add("newId", newId)\n          .add("oldId", oldId)\n          .add("refName", refName)\n          .add("forceUpdate", forceUpdate)\n          .add("allowNonFastForwards", allowNonFastForwards)\n          .add("dryRun", dryRun)\n          .add("skipHooks", skipHooks)\n          .toString();\n    }\n\n    public static Builder builder() {\n      return new Builder();\n    }\n\n    public static class Builder {\n      private ObjectId newId;\n      private ObjectId oldId;\n      private String refName;\n      private boolean forceUpdate;\n      private boolean allowNonFastForwards;\n      private boolean dryRun;\n      private boolean skipHooks;\n\n      public Builder setNewId(ObjectId newId) {\n        this.newId = newId;']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ["public long ramBytesUsed() {return ramBytesUsed;}\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder();\n      sb.append(getClass().getSimpleName());\n      sb.append('(');\n      sb.append(ramBytesUsed);\n      sb.append(')');\n      return sb.toString();\n    }\n\n    @Override\n    public boolean equals(Object other) {\n      if (this == other) return true;\n      if (other == null || getClass() != other.getClass()) return false;\n      return true;\n    }\n\n    @Override\n    public int hashCode() {\n      return getClass().hashCode();\n    }\n\n    @Override\n    public long ramBytesUsed() {\n      return ramBytesUsed;\n    }\n\n    @Override\n    public Collection<Accountable> getChildResources() {\n      return Collections.emptyList();\n    }\n "]

New best validation loss: 0.7420347847938538
Epoch 3: Train Loss: {'loss': 0.7376081861107094}
Epoch 3: Validation Loss: {'loss': 0.6896263645887375}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public int getOldMode() {return oldMode;}\n    public int getNewMode() {return newMode;}\n    public String getOldPath() {return oldPath;}\n    public String getNewPath() {return newPath;}\n\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder();\n      sb.append(getClass().getSimpleName());\n      sb.append(\'[\');\n      sb.append("oldMode=").append(oldMode);\n      sb.append(", oldPath=").append(oldPath);\n      sb.append(", newMode=").append(newMode);\n      sb.append(", newPath=").append(newPath);\n      sb.append(\']\');\n      return sb.toString();\n    }\n\n    @Override\n    public boolean equals(Object o) {\n      if (this == o) {\n        return true;\n      }\n      if (o == null || getClass() != o.getClass()) {\n        return false;\n      }\n      Rename rename = (Rename) o;\n      return oldMode == rename.oldMode\n          && newMode == rename.newMode\n          && Objects.equals(oldPath, rename.oldPath)\n          && Objects.equals(newPath, rename.newPath);\n    }\n\n    @Override\n    public int hashCode() {\n      return Objects.hash(oldMode, newMode, oldPath, newPath);\n    }\n ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ["public long ramBytesUsed() {return ramBytesUsed(null);}\n    public long ramBytesUsed(Accountable accountable) {\n      long ramBytesUsed = super.ramBytesUsed(accountable);\n      ramBytesUsed += postingsReader.ramBytesUsed(accountable);\n      return ramBytesUsed;\n    }\n\n    @Override\n    public void checkIntegrity() throws IOException {\n      super.checkIntegrity();\n      postingsReader.checkIntegrity();\n    }\n\n    @Override\n    public String toString() {\n      final StringBuilder sb = new StringBuilder();\n      sb.append(getClass().getSimpleName());\n      sb.append('(');\n      sb.append(fieldInfo.name);\n      sb.append(':');\n      sb.append(fieldInfo.number);\n      sb.append(')');\n      return sb.toString();\n    }\n\n    @Override\n    public void close() throws IOException {\n      try {\n        postingsReader.close();\n      } finally {\n        super.close();\n      }\n    }\n "]

New best validation loss: 0.6896263645887375
Epoch 4: Train Loss: {'loss': 0.6760290371272171}
Epoch 4: Validation Loss: {'loss': 0.6489370806217194}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public URL getURL() throws MalformedURLException {return new URL(url);}\n\n    @Override\n    public String toString() {\n        return url;\n    }\n\n    @Override\n    public int hashCode() {\n        return url.hashCode();\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        final URL other = (URL) obj;\n        if (!url.equals(other.url)) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int compareTo(URL o) {\n        return url.compareTo(o.url);\n    }\n\n    @Override\n    public void writeExternal(ObjectOutput out) throws IOException {\n        out.writeUTF(url);\n    }\n\n    @Override\n    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n        url = in.readUTF();\n    }\n\n    @Override\n    public Object clone() {\n        try {\n            return super.clone();\n        } catch (CloneNotSupportedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    @Override\n    public int compare(URL o1, URL o2) {\n        return o1.compareTo(o2);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        final URL other = (URL) obj;\n        if (!url.equals(other.url)) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        return url.hashCode();\n    }\n\n    @Override\n    public String toString() {\n        return url;\n    }\n\n    @Override\n    public int compare(URL o1, URL o2) {\n        return o1.compareTo(o2);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        final URL other = (URL) obj;\n        if (!url.equals(other.url)) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        return url.hashCode();\n    }\n\n    @Override\n    public String toString() {\n        return url;\n    }\n\n    @Override\n    public int compare(URL o1, URL o2) {\n        return o1.compareTo(o2);\n    }\n\n    @Override\n    public boolean']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {return BASE_RAM_BYTES_USED + ']

New best validation loss: 0.6489370806217194
Epoch 5: Train Loss: {'loss': 0.6227735376820981}
Epoch 5: Validation Loss: {'loss': 0.6119120501279831}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getOldObjectId() {return oldObjectId;}\npublic void setOldObjectId(ObjectId oldObjectId) {this.oldObjectId = oldObjectId;}\n\npublic ObjectId getNewObjectId() {return newObjectId;}\npublic void setNewObjectId(ObjectId newObjectId) {this.newObjectId = newObjectId;}\n\npublic ObjectId getResultObjectId() {return resultObjectId;}\npublic void setResultObjectId(ObjectId resultObjectId) {this.resultObjectId = resultObjectId;}\n\npublic ObjectId getExpectedOldObjectId() {return expectedOldObjectId;}\npublic void setExpectedOldObjectId(ObjectId expectedOldObjectId) {this.expectedOldObjectId = expectedOldObjectId;}\n\npublic ObjectId getExpectedNewObjectId() {return expectedNewObjectId;}\npublic void setExpectedNewObjectId(ObjectId expectedNewObjectId) {this.expectedNewObjectId = expectedNewObjectId;}\n\npublic ObjectId getExpectedResultObjectId() {return expectedResultObjectId;}\npublic void setExpectedResultObjectId(ObjectId expectedResultObjectId) {this.expectedResultObjectId = expectedResultObjectId;}\n\npublic String getRefName() {return refName;}\npublic void setRefName(String refName) {this.refName = refName;}\n\npublic String getOldRefName() {return oldRefName;}\npublic void setOldRefName(String oldRefName) {this.oldRefName = oldRefName;}\n\npublic String getNewRefName() {return newRefName;}\npublic void setNewRefName(String newRefName) {this.newRefName = newRefName;}\n\npublic String getResultRefName() {return resultRefName;}\npublic void setResultRefName(String resultRefName) {this.resultRefName = resultRefName;}\n\npublic String getExpectedOldRefName() {return expectedOldRefName;}\npublic void setExpectedOldRefName(String expectedOldRefName) {this.expectedOldRefName = expectedOldRefName;}\n\npublic String getExpectedNewRefName() {return expectedNewRefName;}\npublic void setExpectedNewRefName(String expectedNewRefName) {this.expectedNewRefName = expectedNewRefName;}\n\npublic String getExpectedResultRefName() {return expectedResultRefName;}\npublic void setExpectedResultRefName(String expectedResultRefName) {this.expectedResultRefName = expectedResultRefName;}\n\npublic String getMessage() {return message;}\npublic void setMessage(String message) {this.message = message;}\n\npublic String getOldMessage() {return oldMessage;}\npublic void setOldMessage(String oldMessage) {this.oldMessage = oldMessage;}\n\npublic String getNewMessage() {return newMessage;}\npublic void setNewMessage(String newMessage) {this.newMessage = newMessage;}\n\npublic String getResultMessage() {return resultMessage;}\npublic void setResultMessage(String resultMessage) {this.resultMessage = resultMessage;}\n\npublic String getExpectedOldMessage() {return expectedOldMessage;}\npublic void setExpectedOldMessage(String expectedOldMessage) {this.expectedOldMessage = expectedOldMessage;}\n\npublic String getExpectedNewMessage() {return expectedNewMessage;}\npublic void setExpectedNew']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {return BASE_RAM_BYTES_USED + ']

New best validation loss: 0.6119120501279831
Epoch 6: Train Loss: {'loss': 0.5784074303594607}
Epoch 6: Validation Loss: {'loss': 0.5937349290847779}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewObjectId() {return newObjectId;}\npublic void setNewObjectId(ObjectId newObjectId) {this.newObjectId = newObjectId;}\npublic ObjectId getOldObjectId() {return oldObjectId;}\npublic void setOldObjectId(ObjectId oldObjectId) {this.oldObjectId = oldObjectId;}\npublic int getOperation() {return operation;}\npublic void setOperation(int operation) {this.operation = operation;}\npublic String getPath() {return path;}\npublic void setPath(String path) {this.path = path;}\npublic int getScore() {return score;}\npublic void setScore(int score) {this.score = score;}\npublic int getStatus() {return status;}\npublic void setStatus(int status) {this.status = status;}\npublic int getType() {return type;}\npublic void setType(int type) {this.type = type;}\n@Override\npublic boolean equals(Object o) {\n\tif (this == o) return true;\n\tif (o == null || getClass() != o.getClass()) return false;\n\n\tDiffEntry diffEntry = (DiffEntry) o;\n\n\tif (operation != diffEntry.operation) return false;\n\tif (score != diffEntry.score) return false;\n\tif (status != diffEntry.status) return false;\n\tif (type != diffEntry.type) return false;\n\tif (newObjectId != null ? !newObjectId.equals(diffEntry.newObjectId) : diffEntry.newObjectId != null)\n\t\treturn false;\n\tif (oldObjectId != null ? !oldObjectId.equals(diffEntry.oldObjectId) : diffEntry.oldObjectId != null)\n\t\treturn false;\n\tif (path != null ? !path.equals(diffEntry.path) : diffEntry.path != null) return false;\n\n\treturn true;\n}\n@Override\npublic int hashCode() {\n\tint result = newObjectId != null ? newObjectId.hashCode() : ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED; ramBytesUsed += RamUsageEstimator.ramBytesUsed(terms); ramBytesUsed += RamUsageEstimator.ramBytesUsed(docFreqs); ramBytesUsed += RamUsageEstimator.ramBytesUsed(totalTermFreqs); ramBytesUsed += RamUsageEstimator.ramBytesUsed(postings); return ramBytesUsed;}\n\n ']

New best validation loss: 0.5937349290847779
Epoch 7: Train Loss: {'loss': 0.535745763228935}
Epoch 7: Validation Loss: {'loss': 0.573508756160736}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return null;}\n\n ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {return ramBytesUsed.ramBytesUsed();}\n\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder();\n      sb.append(getClass().getSimpleName());\n      sb.append(\'(\');\n      sb.append("field=").append(field);\n      sb.append(",docsWithField=").append(docsWithField);\n      sb.append(",sumTotalTermFreq=").append(sumTotalTermFreq);\n      sb.append(",sumDocFreq=").append(sumDocFreq);\n      sb.append(",docCount=").append(docCount);\n      sb.append(",longsSize=").append(longsSize);\n      sb.append(",bytesSize=").append(bytesSize);\n      sb.append(",minTerm=").append(minTerm);\n      sb.append(",maxTerm=").append(maxTerm);\n      sb.append(\')\');\n      return sb.toString();\n    }\n\n    @Override\n    public boolean equals(Object other) {\n      if (this == other) {\n        return true;\n      }\n      if (other == null || getClass() != other.getClass()) {\n        return false;\n      }\n      FieldMetaData that = (FieldMetaData) other;\n      return Objects.equals(field, that.field)\n          && Objects.equals(docsWithField, that.docsWithField)\n          && Objects.equals(sumTotalTermFreq, that.sumTotalTermFreq)\n          && Objects.equals(sumDocFreq, that.sumDocFreq)\n          && Objects.equals(docCount, that.docCount)\n          && Objects.equals(longsSize, that.longsSize)\n          && Objects.equals(bytesSize, that.bytesSize)\n          && Objects.equals(minTerm, that.minTerm)\n          && Objects.equals(maxTerm, that.maxTerm);\n    }\n\n    @Override\n    public int hashCode() {\n      return Objects.hash(field, docsWithField, sumTotalTermFreq, sumDocFreq, docCount, longsSize, bytesSize, minTerm, maxTerm);\n    }\n ']

New best validation loss: 0.573508756160736
Epoch 8: Train Loss: {'loss': 0.4996719485752791}
Epoch 8: Validation Loss: {'loss': 0.5635308281183243}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewId() {return newId;}\npublic void setNewId(ObjectId newId) {this.newId = newId;}\n\npublic ObjectId getOldId() {return oldId;}\npublic void setOldId(ObjectId oldId) {this.oldId = oldId;}\n\npublic String getRefName() {return refName;}\npublic void setRefName(String refName) {this.refName = refName;}\n\npublic RefUpdate.Result getResult() {return result;}\npublic void setResult(RefUpdate.Result result) {this.result = result;}\n\npublic String getMessage() {return message;}\npublic void setMessage(String message) {this.message = message;}\n\npublic boolean isForceUpdate() {return forceUpdate;}\npublic void setForceUpdate(boolean forceUpdate) {this.forceUpdate = forceUpdate;}\n\npublic boolean isAllowNonFastForwards() {return allowNonFastForwards;}\npublic void setAllowNonFastForwards(boolean allowNonFastForwards) {this.allowNonFastForwards = allowNonFastForwards;}\n\npublic boolean isDryRun() {return dryRun;}\npublic void setDryRun(boolean dryRun) {this.dryRun = dryRun;}\n\npublic boolean isRefLogIdentPresent() {return refLogIdent != null;}\npublic PersonIdent getRefLogIdent() {return refLogIdent;}\npublic void setRefLogIdent(PersonIdent refLogIdent) {this.refLogIdent = refLogIdent;}\n\npublic boolean isRefLogMessagePresent() {return refLogMessage != null;}\npublic String getRefLogMessage() {return refLogMessage;}\npublic void setRefLogMessage(String refLogMessage) {this.refLogMessage = refLogMessage;}\n\n@Override\npublic String toString() {\n\tfinal StringBuilder sb = new StringBuilder();\n\tsb.append("RefUpdate[");\n\tsb.append("name=").append(refName);\n\tsb.append(", oldId=").append(oldId);\n\tsb.append(", newId=").append(newId);\n\tsb.append(", result=").append(result);\n\tsb.append(", forceUpdate=").append(forceUpdate);\n\tsb.append(", allowNonFastForwards=").append(allowNonFastForwards);\n\tsb.append(", dryRun=").append(dryRun);\n\tif (refLogIdent != null) {\n\t\tsb.append(", refLogIdent=").append(refLogIdent);\n\t}\n\tif (refLogMessage != null) {\n\t\tsb.append(", refLogMessage=").append(refLogMessage);\n\t}\n\tsb.append("]");\n\treturn sb.toString();\n}\n\n@Override\npublic int hashCode() {\n\tfinal int prime = ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ["public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += bytes.length * RamUsageEstimator.NUM_BYTES_LONG;return ramBytesUsed;}\n\n    @Override\n    public String toString() {\n      StringBuilder sb = new StringBuilder();\n      sb.append(getClass().getSimpleName());\n      sb.append('[');\n      sb.append(Arrays.toString(bytes));\n      sb.append(']');\n      return sb.toString();\n    }\n\n    @Override\n    public int hashCode() {\n      return Arrays.hashCode(bytes);\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n      if (this == obj) {\n        return true;\n      }\n      if (obj == null) {\n        return false;\n      }\n      if (getClass() != obj.getClass()) {\n        return false;\n      }\n      Longs other = (Longs) obj;\n      if (!Arrays.equals(bytes, other.bytes)) {\n        return false;\n      }\n      return true;\n    }\n\n    @Override\n    public void writeTo(DataOutput out) throws IOException {\n      out.writeVInt(bytes.length);\n      for (long v : bytes) {\n        out.writeLong(v);\n      }\n    }\n\n    @Override\n    public void readFrom(DataInput in) throws IOException {\n      int length = in.readVInt();\n      bytes = new long[length];\n      for (int i = "]

New best validation loss: 0.5635308281183243
Epoch 9: Train Loss: {'loss': 0.461168011739416}
Epoch 9: Validation Loss: {'loss': 0.5518149101734161}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getNewObjectId() {return newObjectId;}\n\n ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long sizeInBytes = ']

New best validation loss: 0.5518149101734161
Epoch 10: Train Loss: {'loss': 0.4280878118924724}
Epoch 10: Validation Loss: {'loss': 0.5430043745040893}
Sanity Check
Current Sample: public virtual ObjectId GetObjectId(){return objectId;}
Max Length 750
Current Output: ['public ObjectId getObjectId() {return objectId;}\n\n ']

Current Sample: public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}
Max Length 750
Current Output: ['public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;for (PostingsAndFreqs postings : postingsAndFreqs) {ramBytesUsed += postings.ramBytesUsed();}return ramBytesUsed;}\n\n    @Override\n    public void close() throws IOException {\n      for (PostingsAndFreqs postings : postingsAndFreqs) {\n        postings.close();\n      }\n      postingsAndFreqs.clear();\n    }\n\n    @Override\n    public String toString() {\n      return getClass().getSimpleName() + "(postings=" + postingsAndFreqs.size() + ")";\n    }\n ']

New best validation loss: 0.5430043745040893
Training completed. Best validation loss: 0.5430043745040893
Training loss list: [1.093425663478166, 0.8205842545020927, 0.7376081861107094, 0.6760290371272171, 0.6227735376820981, 0.5784074303594607, 0.535745763228935, 0.4996719485752791, 0.461168011739416, 0.4280878118924724]
Validation loss list: [0.8093055725097656, 0.7420347847938538, 0.6896263645887375, 0.6489370806217194, 0.6119120501279831, 0.5937349290847779, 0.573508756160736, 0.5635308281183243, 0.5518149101734161, 0.5430043745040893]
